/**
 * @fileoverview gRPC-Web generated client stub for MerchantMiddlewareCustomer
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.25.0-rc2
// source: MerchantMiddlewareCustomer.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as MerchantMiddlewareCustomer_pb from './MerchantMiddlewareCustomer_pb';


export class MerchantMiddlewareCustomerSvcClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetUsersByMerchantId = new grpcWeb.MethodDescriptor(
    '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetUsersByMerchantId',
    grpcWeb.MethodType.UNARY,
    MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    MerchantMiddlewareCustomer_pb.UsersUssdByCIDListMessage,
    (request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage) => {
      return request.serializeBinary();
    },
    MerchantMiddlewareCustomer_pb.UsersUssdByCIDListMessage.deserializeBinary
  );

  getUsersByMerchantId(
    request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    metadata: grpcWeb.Metadata | null): Promise<MerchantMiddlewareCustomer_pb.UsersUssdByCIDListMessage>;

  getUsersByMerchantId(
    request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.UsersUssdByCIDListMessage) => void): grpcWeb.ClientReadableStream<MerchantMiddlewareCustomer_pb.UsersUssdByCIDListMessage>;

  getUsersByMerchantId(
    request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.UsersUssdByCIDListMessage) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetUsersByMerchantId',
        request,
        metadata || {},
        this.methodDescriptorGetUsersByMerchantId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetUsersByMerchantId',
    request,
    metadata || {},
    this.methodDescriptorGetUsersByMerchantId);
  }

  methodDescriptorAuthorizeRegistredCustomer = new grpcWeb.MethodDescriptor(
    '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/AuthorizeRegistredCustomer',
    grpcWeb.MethodType.UNARY,
    MerchantMiddlewareCustomer_pb.MerchantCustomerIdRequestMessage,
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware,
    (request: MerchantMiddlewareCustomer_pb.MerchantCustomerIdRequestMessage) => {
      return request.serializeBinary();
    },
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware.deserializeBinary
  );

  authorizeRegistredCustomer(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerIdRequestMessage,
    metadata: grpcWeb.Metadata | null): Promise<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  authorizeRegistredCustomer(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerIdRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void): grpcWeb.ClientReadableStream<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  authorizeRegistredCustomer(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerIdRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/AuthorizeRegistredCustomer',
        request,
        metadata || {},
        this.methodDescriptorAuthorizeRegistredCustomer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/AuthorizeRegistredCustomer',
    request,
    metadata || {},
    this.methodDescriptorAuthorizeRegistredCustomer);
  }

  methodDescriptorDisapproveRegistredCustomer = new grpcWeb.MethodDescriptor(
    '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/DisapproveRegistredCustomer',
    grpcWeb.MethodType.UNARY,
    MerchantMiddlewareCustomer_pb.MerchantCustomerIdRequestMessage,
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware,
    (request: MerchantMiddlewareCustomer_pb.MerchantCustomerIdRequestMessage) => {
      return request.serializeBinary();
    },
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware.deserializeBinary
  );

  disapproveRegistredCustomer(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerIdRequestMessage,
    metadata: grpcWeb.Metadata | null): Promise<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  disapproveRegistredCustomer(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerIdRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void): grpcWeb.ClientReadableStream<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  disapproveRegistredCustomer(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerIdRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/DisapproveRegistredCustomer',
        request,
        metadata || {},
        this.methodDescriptorDisapproveRegistredCustomer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/DisapproveRegistredCustomer',
    request,
    metadata || {},
    this.methodDescriptorDisapproveRegistredCustomer);
  }

  methodDescriptorSuspendorcloseRegistredCustomer = new grpcWeb.MethodDescriptor(
    '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/SuspendorcloseRegistredCustomer',
    grpcWeb.MethodType.UNARY,
    MerchantMiddlewareCustomer_pb.MerchantCustomerSuspendCloseRequestMessage,
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware,
    (request: MerchantMiddlewareCustomer_pb.MerchantCustomerSuspendCloseRequestMessage) => {
      return request.serializeBinary();
    },
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware.deserializeBinary
  );

  suspendorcloseRegistredCustomer(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerSuspendCloseRequestMessage,
    metadata: grpcWeb.Metadata | null): Promise<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  suspendorcloseRegistredCustomer(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerSuspendCloseRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void): grpcWeb.ClientReadableStream<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  suspendorcloseRegistredCustomer(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerSuspendCloseRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/SuspendorcloseRegistredCustomer',
        request,
        metadata || {},
        this.methodDescriptorSuspendorcloseRegistredCustomer,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/SuspendorcloseRegistredCustomer',
    request,
    metadata || {},
    this.methodDescriptorSuspendorcloseRegistredCustomer);
  }

  methodDescriptorGetAccountToAccountPeriodTrans = new grpcWeb.MethodDescriptor(
    '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetAccountToAccountPeriodTrans',
    grpcWeb.MethodType.UNARY,
    MerchantMiddlewareCustomer_pb.AcctToAcctTransRequestMessage,
    MerchantMiddlewareCustomer_pb.AcctToAcctTransListMessage,
    (request: MerchantMiddlewareCustomer_pb.AcctToAcctTransRequestMessage) => {
      return request.serializeBinary();
    },
    MerchantMiddlewareCustomer_pb.AcctToAcctTransListMessage.deserializeBinary
  );

  getAccountToAccountPeriodTrans(
    request: MerchantMiddlewareCustomer_pb.AcctToAcctTransRequestMessage,
    metadata: grpcWeb.Metadata | null): Promise<MerchantMiddlewareCustomer_pb.AcctToAcctTransListMessage>;

  getAccountToAccountPeriodTrans(
    request: MerchantMiddlewareCustomer_pb.AcctToAcctTransRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.AcctToAcctTransListMessage) => void): grpcWeb.ClientReadableStream<MerchantMiddlewareCustomer_pb.AcctToAcctTransListMessage>;

  getAccountToAccountPeriodTrans(
    request: MerchantMiddlewareCustomer_pb.AcctToAcctTransRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.AcctToAcctTransListMessage) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetAccountToAccountPeriodTrans',
        request,
        metadata || {},
        this.methodDescriptorGetAccountToAccountPeriodTrans,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetAccountToAccountPeriodTrans',
    request,
    metadata || {},
    this.methodDescriptorGetAccountToAccountPeriodTrans);
  }

  methodDescriptorGetMerchantCustomerPINChangeRequest = new grpcWeb.MethodDescriptor(
    '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerPINChangeRequest',
    grpcWeb.MethodType.UNARY,
    MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeListMessage,
    (request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage) => {
      return request.serializeBinary();
    },
    MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeListMessage.deserializeBinary
  );

  getMerchantCustomerPINChangeRequest(
    request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    metadata: grpcWeb.Metadata | null): Promise<MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeListMessage>;

  getMerchantCustomerPINChangeRequest(
    request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeListMessage) => void): grpcWeb.ClientReadableStream<MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeListMessage>;

  getMerchantCustomerPINChangeRequest(
    request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeListMessage) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerPINChangeRequest',
        request,
        metadata || {},
        this.methodDescriptorGetMerchantCustomerPINChangeRequest,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerPINChangeRequest',
    request,
    metadata || {},
    this.methodDescriptorGetMerchantCustomerPINChangeRequest);
  }

  methodDescriptorMerchantCustomerPINChangeApproval = new grpcWeb.MethodDescriptor(
    '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerPINChangeApproval',
    grpcWeb.MethodType.UNARY,
    MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeApproveMessage,
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware,
    (request: MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeApproveMessage) => {
      return request.serializeBinary();
    },
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware.deserializeBinary
  );

  merchantCustomerPINChangeApproval(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeApproveMessage,
    metadata: grpcWeb.Metadata | null): Promise<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  merchantCustomerPINChangeApproval(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeApproveMessage,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void): grpcWeb.ClientReadableStream<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  merchantCustomerPINChangeApproval(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeApproveMessage,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerPINChangeApproval',
        request,
        metadata || {},
        this.methodDescriptorMerchantCustomerPINChangeApproval,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerPINChangeApproval',
    request,
    metadata || {},
    this.methodDescriptorMerchantCustomerPINChangeApproval);
  }

  methodDescriptorMerchantCustomerTerminateServiceRequest = new grpcWeb.MethodDescriptor(
    '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequest',
    grpcWeb.MethodType.UNARY,
    MerchantMiddlewareCustomer_pb.MerchantCustomerTerminateServiceMessage,
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware,
    (request: MerchantMiddlewareCustomer_pb.MerchantCustomerTerminateServiceMessage) => {
      return request.serializeBinary();
    },
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware.deserializeBinary
  );

  merchantCustomerTerminateServiceRequest(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerTerminateServiceMessage,
    metadata: grpcWeb.Metadata | null): Promise<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  merchantCustomerTerminateServiceRequest(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerTerminateServiceMessage,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void): grpcWeb.ClientReadableStream<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  merchantCustomerTerminateServiceRequest(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerTerminateServiceMessage,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequest',
        request,
        metadata || {},
        this.methodDescriptorMerchantCustomerTerminateServiceRequest,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequest',
    request,
    metadata || {},
    this.methodDescriptorMerchantCustomerTerminateServiceRequest);
  }

  methodDescriptorMerchantCustomerTerminateServiceRequestApproval = new grpcWeb.MethodDescriptor(
    '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequestApproval',
    grpcWeb.MethodType.UNARY,
    MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeApproveMessage,
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware,
    (request: MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeApproveMessage) => {
      return request.serializeBinary();
    },
    MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware.deserializeBinary
  );

  merchantCustomerTerminateServiceRequestApproval(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeApproveMessage,
    metadata: grpcWeb.Metadata | null): Promise<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  merchantCustomerTerminateServiceRequestApproval(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeApproveMessage,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void): grpcWeb.ClientReadableStream<MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware>;

  merchantCustomerTerminateServiceRequestApproval(
    request: MerchantMiddlewareCustomer_pb.MerchantCustomerPINChangeApproveMessage,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.SuccessMessageMerchantMiddleware) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequestApproval',
        request,
        metadata || {},
        this.methodDescriptorMerchantCustomerTerminateServiceRequestApproval,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/MerchantCustomerTerminateServiceRequestApproval',
    request,
    metadata || {},
    this.methodDescriptorMerchantCustomerTerminateServiceRequestApproval);
  }

  methodDescriptorGetMerchantCustomerTerminateServiceRequest = new grpcWeb.MethodDescriptor(
    '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerTerminateServiceRequest',
    grpcWeb.MethodType.UNARY,
    MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    MerchantMiddlewareCustomer_pb.MerchantCustomerTerminateServiceListResponseMessage,
    (request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage) => {
      return request.serializeBinary();
    },
    MerchantMiddlewareCustomer_pb.MerchantCustomerTerminateServiceListResponseMessage.deserializeBinary
  );

  getMerchantCustomerTerminateServiceRequest(
    request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    metadata: grpcWeb.Metadata | null): Promise<MerchantMiddlewareCustomer_pb.MerchantCustomerTerminateServiceListResponseMessage>;

  getMerchantCustomerTerminateServiceRequest(
    request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.MerchantCustomerTerminateServiceListResponseMessage) => void): grpcWeb.ClientReadableStream<MerchantMiddlewareCustomer_pb.MerchantCustomerTerminateServiceListResponseMessage>;

  getMerchantCustomerTerminateServiceRequest(
    request: MerchantMiddlewareCustomer_pb.UsersByCIDRequestMessage,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: MerchantMiddlewareCustomer_pb.MerchantCustomerTerminateServiceListResponseMessage) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerTerminateServiceRequest',
        request,
        metadata || {},
        this.methodDescriptorGetMerchantCustomerTerminateServiceRequest,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/MerchantMiddlewareCustomer.MerchantMiddlewareCustomerSvc/GetMerchantCustomerTerminateServiceRequest',
    request,
    metadata || {},
    this.methodDescriptorGetMerchantCustomerTerminateServiceRequest);
  }

}

