// source: MerchantMiddlewareCustomer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.UsersByCIDMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage', null, global);
goog.exportSymbol('proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage.displayName = 'proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.displayName = 'proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.displayName = 'proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.displayName = 'proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.displayName = 'proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.UsersByCIDMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.UsersByCIDMessage.displayName = 'proto.MerchantMiddlewareCustomer.UsersByCIDMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.repeatedFields_, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.displayName = 'proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.displayName = 'proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.displayName = 'proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.repeatedFields_, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.displayName = 'proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.displayName = 'proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.repeatedFields_, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.displayName = 'proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.displayName = 'proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.displayName = 'proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.displayName = 'proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.displayName = 'proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage;
  return proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantMiddlewareEmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messagesuccessfulorfailed: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    registrationerrorcode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paypartnerid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware}
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware;
  return proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware}
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagesuccessfulorfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationerrorcode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessagesuccessfulorfailed();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegistrationerrorcode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPaypartnerid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware} returns this
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string messageSuccessfulOrFailed = 2;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.getMessagesuccessfulorfailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware} returns this
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.setMessagesuccessfulorfailed = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware} returns this
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string registrationErrorCode = 4;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.getRegistrationerrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware} returns this
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.setRegistrationerrorcode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string payPartnerId = 5;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.getPaypartnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware} returns this
 */
proto.MerchantMiddlewareCustomer.SuccessMessageMerchantMiddleware.prototype.setPaypartnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantcustomeruserid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mobileno: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage;
  return proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantcustomeruserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantcustomeruserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMobileno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string merchantCustomerUserId = 1;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.prototype.getMerchantcustomeruserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.prototype.setMerchantcustomeruserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cid = 2;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.prototype.getCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.prototype.setCid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string customerName = 3;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.prototype.getCustomername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.prototype.setCustomername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mobileNo = 4;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.prototype.getMobileno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerIdRequestMessage.prototype.setMobileno = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantcustomeruserid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reasonforsuspensionorclose: jspb.Message.getFieldWithDefault(msg, 2, ""),
    merchantcustomerstatus: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage;
  return proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantcustomeruserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReasonforsuspensionorclose(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantcustomerstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantcustomeruserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReasonforsuspensionorclose();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMerchantcustomerstatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string merchantCustomerUserId = 1;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.prototype.getMerchantcustomeruserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.prototype.setMerchantcustomeruserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reasonForSuspensionOrClose = 2;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.prototype.getReasonforsuspensionorclose = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.prototype.setReasonforsuspensionorclose = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string merchantCustomerStatus = 3;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.prototype.getMerchantcustomerstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerSuspendCloseRequestMessage.prototype.setMerchantcustomerstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subscriptionstatus: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage;
  return proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubscriptionstatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subscriptionStatus = 2;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.prototype.getSubscriptionstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersByCIDRequestMessage.prototype.setSubscriptionstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.UsersByCIDMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mobilenumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customernumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    accountnumber: jspb.Message.getFieldWithDefault(msg, 5, ""),
    subscriptionussd: jspb.Message.getFieldWithDefault(msg, 6, ""),
    customernameatregistration: jspb.Message.getFieldWithDefault(msg, 7, ""),
    makerid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    makedatetime: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.UsersByCIDMessage;
  return proto.MerchantMiddlewareCustomer.UsersByCIDMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomernumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountnumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionussd(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomernameatregistration(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakedatetime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.UsersByCIDMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMobilenumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomernumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAccountnumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSubscriptionussd();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCustomernameatregistration();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMakerid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMakedatetime();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string userId = 1;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mobileNumber = 2;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.getMobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.setMobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string customerNumber = 3;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.getCustomernumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.setCustomernumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string cID = 4;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.getCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.setCid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string accountNumber = 5;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.getAccountnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.setAccountnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string subscriptionUssd = 6;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.getSubscriptionussd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.setSubscriptionussd = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string customerNameAtRegistration = 7;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.getCustomernameatregistration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.setCustomernameatregistration = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string makerId = 10;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.getMakerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.setMakerid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string makeDateTime = 11;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.getMakedatetime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersByCIDMessage.prototype.setMakedatetime = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    userslistList: jspb.Message.toObjectList(msg.getUserslistList(),
    proto.MerchantMiddlewareCustomer.UsersByCIDMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage}
 */
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage;
  return proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage}
 */
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MerchantMiddlewareCustomer.UsersByCIDMessage;
      reader.readMessage(value,proto.MerchantMiddlewareCustomer.UsersByCIDMessage.deserializeBinaryFromReader);
      msg.addUserslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.MerchantMiddlewareCustomer.UsersByCIDMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UsersByCIDMessage usersList = 1;
 * @return {!Array<!proto.MerchantMiddlewareCustomer.UsersByCIDMessage>}
 */
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.prototype.getUserslistList = function() {
  return /** @type{!Array<!proto.MerchantMiddlewareCustomer.UsersByCIDMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MerchantMiddlewareCustomer.UsersByCIDMessage, 1));
};


/**
 * @param {!Array<!proto.MerchantMiddlewareCustomer.UsersByCIDMessage>} value
 * @return {!proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage} returns this
*/
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.prototype.setUserslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MerchantMiddlewareCustomer.UsersByCIDMessage}
 */
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.prototype.addUserslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.MerchantMiddlewareCustomer.UsersByCIDMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage} returns this
 */
proto.MerchantMiddlewareCustomer.UsersUssdByCIDListMessage.prototype.clearUserslistList = function() {
  return this.setUserslistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    startdate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    enddate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage;
  return proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartdate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnddate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStartdate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnddate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string merchantId = 1;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.prototype.getMerchantid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.prototype.setMerchantid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string startDate = 2;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.prototype.getStartdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.prototype.setStartdate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string endDate = 3;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.prototype.getEnddate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.prototype.setEnddate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string countryCode = 4;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceaccount: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourceaccountname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    transtype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 4, ""),
    destinationaccount: jspb.Message.getFieldWithDefault(msg, 5, ""),
    destinationaccountname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    transstatus: jspb.Message.getFieldWithDefault(msg, 7, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    batchno: jspb.Message.getFieldWithDefault(msg, 9, ""),
    valuedate: jspb.Message.getFieldWithDefault(msg, 10, ""),
    transtime: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage;
  return proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceaccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceaccountname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranstype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationaccount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationaccountname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransstatus(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatchno(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuedate(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranstime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceaccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSourceaccountname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTranstype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDestinationaccount();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDestinationaccountname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTransstatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBatchno();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getValuedate();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTranstime();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string sourceAccount = 1;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.getSourceaccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.setSourceaccount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sourceAccountName = 2;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.getSourceaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.setSourceaccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string transType = 3;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.getTranstype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.setTranstype = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Amount = 4;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string destinationAccount = 5;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.getDestinationaccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.setDestinationaccount = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string destinationAccountName = 6;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.getDestinationaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.setDestinationaccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string transStatus = 7;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.getTransstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.setTransstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string userId = 8;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string batchNo = 9;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.getBatchno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.setBatchno = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string valueDate = 10;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.getValuedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.setValuedate = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string transTime = 11;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.getTranstime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.prototype.setTranstime = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    translistList: jspb.Message.toObjectList(msg.getTranslistList(),
    proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage;
  return proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage;
      reader.readMessage(value,proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.deserializeBinaryFromReader);
      msg.addTranslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTranslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AcctToAcctTransMessage transList = 1;
 * @return {!Array<!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage>}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.prototype.getTranslistList = function() {
  return /** @type{!Array<!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage, 1));
};


/**
 * @param {!Array<!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage>} value
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage} returns this
*/
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.prototype.setTranslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage}
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.prototype.addTranslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.MerchantMiddlewareCustomer.AcctToAcctTransMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage} returns this
 */
proto.MerchantMiddlewareCustomer.AcctToAcctTransListMessage.prototype.clearTranslistList = function() {
  return this.setTranslistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    tid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mobileno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    requeststatus: jspb.Message.getFieldWithDefault(msg, 3, ""),
    requestdate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    customername: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage;
  return proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequeststatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestdate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomername(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMobileno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRequeststatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRequestdate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCustomername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int64 tid = 1;
 * @return {number}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.getTid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.setTid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string mobileNo = 2;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.getMobileno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.setMobileno = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string requestStatus = 3;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.getRequeststatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.setRequeststatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string requestDate = 4;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.getRequestdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.setRequestdate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string customerName = 5;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.getCustomername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.setCustomername = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string cID = 6;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.getCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.prototype.setCid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    custlistList: jspb.Message.toObjectList(msg.getCustlistList(),
    proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage;
  return proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage;
      reader.readMessage(value,proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.deserializeBinaryFromReader);
      msg.addCustlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MerchantCustomerPINChangeMessage custList = 1;
 * @return {!Array<!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage>}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.prototype.getCustlistList = function() {
  return /** @type{!Array<!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage, 1));
};


/**
 * @param {!Array<!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage>} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage} returns this
*/
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.prototype.setCustlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.prototype.addCustlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeListMessage.prototype.clearCustlistList = function() {
  return this.setCustlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    tid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    subscriptionstatus: jspb.Message.getFieldWithDefault(msg, 2, ""),
    approveordisapprove: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mobileno: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage;
  return proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionstatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApproveordisapprove(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSubscriptionstatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApproveordisapprove();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMobileno();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 tid = 1;
 * @return {number}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.getTid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.setTid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string subscriptionStatus = 2;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.getSubscriptionstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.setSubscriptionstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string approveOrDisapprove = 3;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.getApproveordisapprove = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.setApproveordisapprove = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string cid = 4;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.getCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.setCid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string mobileNo = 5;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.getMobileno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerPINChangeApproveMessage.prototype.setMobileno = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobileno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    terminationstatus: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage;
  return proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTerminationstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobileno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTerminationstatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string mobileNo = 1;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.prototype.getMobileno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.prototype.setMobileno = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cid = 2;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.prototype.getCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.prototype.setCid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string terminationStatus = 3;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.prototype.getTerminationstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceMessage.prototype.setTerminationstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobileno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    makerid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    requestdate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tid: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage;
  return proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestdate(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobileno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMakerid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRequestdate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTid();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional string mobileNo = 1;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.getMobileno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.setMobileno = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cid = 2;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.getCid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.setCid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string customername = 3;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.getCustomername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.setCustomername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string makerId = 4;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.getMakerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.setMakerid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string requestDate = 5;
 * @return {string}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.getRequestdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.setRequestdate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 tid = 6;
 * @return {number}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.getTid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.prototype.setTid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    custlistList: jspb.Message.toObjectList(msg.getCustlistList(),
    proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage;
  return proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage;
      reader.readMessage(value,proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.deserializeBinaryFromReader);
      msg.addCustlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MerchantCustomerTerminateServiceResponseMessage custList = 1;
 * @return {!Array<!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage>}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.prototype.getCustlistList = function() {
  return /** @type{!Array<!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage, 1));
};


/**
 * @param {!Array<!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage>} value
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage} returns this
*/
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.prototype.setCustlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage}
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.prototype.addCustlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceResponseMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage} returns this
 */
proto.MerchantMiddlewareCustomer.MerchantCustomerTerminateServiceListResponseMessage.prototype.clearCustlistList = function() {
  return this.setCustlistList([]);
};


goog.object.extend(exports, proto.MerchantMiddlewareCustomer);
