// source: eganow/api/payment/payment_payload.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_api_field_behavior_pb = require('../../../google/api/field_behavior_pb.js');
goog.object.extend(proto, google_api_field_behavior_pb);
goog.exportSymbol('proto.eganow.api.payment.AccessTokenResponse', null, global);
goog.exportSymbol('proto.eganow.api.payment.GetAccountInfoRequest', null, global);
goog.exportSymbol('proto.eganow.api.payment.GetAccountInfoResponse', null, global);
goog.exportSymbol('proto.eganow.api.payment.GetServiceListRequest', null, global);
goog.exportSymbol('proto.eganow.api.payment.GetServiceListResponse', null, global);
goog.exportSymbol('proto.eganow.api.payment.QueryTransferStatusRequest', null, global);
goog.exportSymbol('proto.eganow.api.payment.QueryTransferStatusTransferResponse', null, global);
goog.exportSymbol('proto.eganow.api.payment.ServicePayload', null, global);
goog.exportSymbol('proto.eganow.api.payment.TransferCallbackResponse', null, global);
goog.exportSymbol('proto.eganow.api.payment.TransferRequest', null, global);
goog.exportSymbol('proto.eganow.api.payment.TransferResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.payment.AccessTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.payment.AccessTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.payment.AccessTokenResponse.displayName = 'proto.eganow.api.payment.AccessTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.payment.GetAccountInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.payment.GetAccountInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.payment.GetAccountInfoRequest.displayName = 'proto.eganow.api.payment.GetAccountInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.payment.GetAccountInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.payment.GetAccountInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.payment.GetAccountInfoResponse.displayName = 'proto.eganow.api.payment.GetAccountInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.payment.GetServiceListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.payment.GetServiceListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.payment.GetServiceListRequest.displayName = 'proto.eganow.api.payment.GetServiceListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.payment.ServicePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.payment.ServicePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.payment.ServicePayload.displayName = 'proto.eganow.api.payment.ServicePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.payment.GetServiceListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.eganow.api.payment.GetServiceListResponse.repeatedFields_, null);
};
goog.inherits(proto.eganow.api.payment.GetServiceListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.payment.GetServiceListResponse.displayName = 'proto.eganow.api.payment.GetServiceListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.payment.TransferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.payment.TransferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.payment.TransferRequest.displayName = 'proto.eganow.api.payment.TransferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.payment.TransferResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.payment.TransferResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.payment.TransferResponse.displayName = 'proto.eganow.api.payment.TransferResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.payment.QueryTransferStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.payment.QueryTransferStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.payment.QueryTransferStatusRequest.displayName = 'proto.eganow.api.payment.QueryTransferStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.payment.QueryTransferStatusTransferResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.payment.QueryTransferStatusTransferResponse.displayName = 'proto.eganow.api.payment.QueryTransferStatusTransferResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.eganow.api.payment.TransferCallbackResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.eganow.api.payment.TransferCallbackResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.eganow.api.payment.TransferCallbackResponse.displayName = 'proto.eganow.api.payment.TransferCallbackResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.payment.AccessTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.payment.AccessTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.payment.AccessTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.AccessTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    token: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.payment.AccessTokenResponse}
 */
proto.eganow.api.payment.AccessTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.payment.AccessTokenResponse;
  return proto.eganow.api.payment.AccessTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.payment.AccessTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.payment.AccessTokenResponse}
 */
proto.eganow.api.payment.AccessTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.payment.AccessTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.payment.AccessTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.payment.AccessTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.AccessTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool Status = 1;
 * @return {boolean}
 */
proto.eganow.api.payment.AccessTokenResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.eganow.api.payment.AccessTokenResponse} returns this
 */
proto.eganow.api.payment.AccessTokenResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.eganow.api.payment.AccessTokenResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.AccessTokenResponse} returns this
 */
proto.eganow.api.payment.AccessTokenResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Token = 3;
 * @return {string}
 */
proto.eganow.api.payment.AccessTokenResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.AccessTokenResponse} returns this
 */
proto.eganow.api.payment.AccessTokenResponse.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.payment.GetAccountInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.payment.GetAccountInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.payment.GetAccountInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.GetAccountInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customeracctno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.payment.GetAccountInfoRequest}
 */
proto.eganow.api.payment.GetAccountInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.payment.GetAccountInfoRequest;
  return proto.eganow.api.payment.GetAccountInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.payment.GetAccountInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.payment.GetAccountInfoRequest}
 */
proto.eganow.api.payment.GetAccountInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomeracctno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.payment.GetAccountInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.payment.GetAccountInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.payment.GetAccountInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.GetAccountInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomeracctno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string CustomerAcctNo = 1;
 * @return {string}
 */
proto.eganow.api.payment.GetAccountInfoRequest.prototype.getCustomeracctno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.GetAccountInfoRequest} returns this
 */
proto.eganow.api.payment.GetAccountInfoRequest.prototype.setCustomeracctno = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string PayPartnerServiceId = 2;
 * @return {string}
 */
proto.eganow.api.payment.GetAccountInfoRequest.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.GetAccountInfoRequest} returns this
 */
proto.eganow.api.payment.GetAccountInfoRequest.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string LanguageId = 3;
 * @return {string}
 */
proto.eganow.api.payment.GetAccountInfoRequest.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.GetAccountInfoRequest} returns this
 */
proto.eganow.api.payment.GetAccountInfoRequest.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string CountryCode = 4;
 * @return {string}
 */
proto.eganow.api.payment.GetAccountInfoRequest.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.GetAccountInfoRequest} returns this
 */
proto.eganow.api.payment.GetAccountInfoRequest.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.payment.GetAccountInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.payment.GetAccountInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.payment.GetAccountInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.GetAccountInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accountname: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.payment.GetAccountInfoResponse}
 */
proto.eganow.api.payment.GetAccountInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.payment.GetAccountInfoResponse;
  return proto.eganow.api.payment.GetAccountInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.payment.GetAccountInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.payment.GetAccountInfoResponse}
 */
proto.eganow.api.payment.GetAccountInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.payment.GetAccountInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.payment.GetAccountInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.payment.GetAccountInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.GetAccountInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccountname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool Status = 1;
 * @return {boolean}
 */
proto.eganow.api.payment.GetAccountInfoResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.eganow.api.payment.GetAccountInfoResponse} returns this
 */
proto.eganow.api.payment.GetAccountInfoResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.eganow.api.payment.GetAccountInfoResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.GetAccountInfoResponse} returns this
 */
proto.eganow.api.payment.GetAccountInfoResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string AccountName = 3;
 * @return {string}
 */
proto.eganow.api.payment.GetAccountInfoResponse.prototype.getAccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.GetAccountInfoResponse} returns this
 */
proto.eganow.api.payment.GetAccountInfoResponse.prototype.setAccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.payment.GetServiceListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.payment.GetServiceListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.payment.GetServiceListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.GetServiceListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    languageid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.payment.GetServiceListRequest}
 */
proto.eganow.api.payment.GetServiceListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.payment.GetServiceListRequest;
  return proto.eganow.api.payment.GetServiceListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.payment.GetServiceListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.payment.GetServiceListRequest}
 */
proto.eganow.api.payment.GetServiceListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.payment.GetServiceListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.payment.GetServiceListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.payment.GetServiceListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.GetServiceListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string LanguageId = 3;
 * @return {string}
 */
proto.eganow.api.payment.GetServiceListRequest.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.GetServiceListRequest} returns this
 */
proto.eganow.api.payment.GetServiceListRequest.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string CountryCode = 4;
 * @return {string}
 */
proto.eganow.api.payment.GetServiceListRequest.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.GetServiceListRequest} returns this
 */
proto.eganow.api.payment.GetServiceListRequest.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.payment.ServicePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.payment.ServicePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.payment.ServicePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.ServicePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnertypeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paypartnergroupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    appname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    countryname: jspb.Message.getFieldWithDefault(msg, 5, ""),
    paypartnergroupurl: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.payment.ServicePayload}
 */
proto.eganow.api.payment.ServicePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.payment.ServicePayload;
  return proto.eganow.api.payment.ServicePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.payment.ServicePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.payment.ServicePayload}
 */
proto.eganow.api.payment.ServicePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnertypeid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnergroupid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnergroupurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.payment.ServicePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.payment.ServicePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.payment.ServicePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.ServicePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnertypeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPaypartnergroupid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAppname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCountryname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPaypartnergroupurl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 PayPartnerTypeId = 1;
 * @return {number}
 */
proto.eganow.api.payment.ServicePayload.prototype.getPaypartnertypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.eganow.api.payment.ServicePayload} returns this
 */
proto.eganow.api.payment.ServicePayload.prototype.setPaypartnertypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 PayPartnerGroupId = 2;
 * @return {number}
 */
proto.eganow.api.payment.ServicePayload.prototype.getPaypartnergroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.eganow.api.payment.ServicePayload} returns this
 */
proto.eganow.api.payment.ServicePayload.prototype.setPaypartnergroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string AppName = 3;
 * @return {string}
 */
proto.eganow.api.payment.ServicePayload.prototype.getAppname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.ServicePayload} returns this
 */
proto.eganow.api.payment.ServicePayload.prototype.setAppname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string CountryCode = 4;
 * @return {string}
 */
proto.eganow.api.payment.ServicePayload.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.ServicePayload} returns this
 */
proto.eganow.api.payment.ServicePayload.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string CountryName = 5;
 * @return {string}
 */
proto.eganow.api.payment.ServicePayload.prototype.getCountryname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.ServicePayload} returns this
 */
proto.eganow.api.payment.ServicePayload.prototype.setCountryname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string PayPartnerGroupUrl = 6;
 * @return {string}
 */
proto.eganow.api.payment.ServicePayload.prototype.getPaypartnergroupurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.ServicePayload} returns this
 */
proto.eganow.api.payment.ServicePayload.prototype.setPaypartnergroupurl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.eganow.api.payment.GetServiceListResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.payment.GetServiceListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.payment.GetServiceListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.payment.GetServiceListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.GetServiceListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymenttypelistList: jspb.Message.toObjectList(msg.getPaymenttypelistList(),
    proto.eganow.api.payment.ServicePayload.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.payment.GetServiceListResponse}
 */
proto.eganow.api.payment.GetServiceListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.payment.GetServiceListResponse;
  return proto.eganow.api.payment.GetServiceListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.payment.GetServiceListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.payment.GetServiceListResponse}
 */
proto.eganow.api.payment.GetServiceListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.eganow.api.payment.ServicePayload;
      reader.readMessage(value,proto.eganow.api.payment.ServicePayload.deserializeBinaryFromReader);
      msg.addPaymenttypelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.payment.GetServiceListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.payment.GetServiceListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.payment.GetServiceListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.GetServiceListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymenttypelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.eganow.api.payment.ServicePayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool Status = 1;
 * @return {boolean}
 */
proto.eganow.api.payment.GetServiceListResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.eganow.api.payment.GetServiceListResponse} returns this
 */
proto.eganow.api.payment.GetServiceListResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.eganow.api.payment.GetServiceListResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.GetServiceListResponse} returns this
 */
proto.eganow.api.payment.GetServiceListResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ServicePayload PaymentTypeList = 3;
 * @return {!Array<!proto.eganow.api.payment.ServicePayload>}
 */
proto.eganow.api.payment.GetServiceListResponse.prototype.getPaymenttypelistList = function() {
  return /** @type{!Array<!proto.eganow.api.payment.ServicePayload>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.eganow.api.payment.ServicePayload, 3));
};


/**
 * @param {!Array<!proto.eganow.api.payment.ServicePayload>} value
 * @return {!proto.eganow.api.payment.GetServiceListResponse} returns this
*/
proto.eganow.api.payment.GetServiceListResponse.prototype.setPaymenttypelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.eganow.api.payment.ServicePayload=} opt_value
 * @param {number=} opt_index
 * @return {!proto.eganow.api.payment.ServicePayload}
 */
proto.eganow.api.payment.GetServiceListResponse.prototype.addPaymenttypelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.eganow.api.payment.ServicePayload, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.eganow.api.payment.GetServiceListResponse} returns this
 */
proto.eganow.api.payment.GetServiceListResponse.prototype.clearPaymenttypelistList = function() {
  return this.setPaymenttypelistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.payment.TransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.payment.TransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.payment.TransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.TransferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    accountnoorcardnoormsisdn: jspb.Message.getFieldWithDefault(msg, 3, ""),
    accountname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    transactionid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    narration: jspb.Message.getFieldWithDefault(msg, 6, ""),
    transcurrencyiso: jspb.Message.getFieldWithDefault(msg, 7, ""),
    expirydatemonth: jspb.Message.getFieldWithDefault(msg, 8, 0),
    expirydateyear: jspb.Message.getFieldWithDefault(msg, 9, 0),
    cvv: jspb.Message.getFieldWithDefault(msg, 10, 0),
    languageid: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.payment.TransferRequest}
 */
proto.eganow.api.payment.TransferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.payment.TransferRequest;
  return proto.eganow.api.payment.TransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.payment.TransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.payment.TransferRequest}
 */
proto.eganow.api.payment.TransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountnoorcardnoormsisdn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setNarration(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranscurrencyiso(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExpirydatemonth(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExpirydateyear(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCvv(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.payment.TransferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.payment.TransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.payment.TransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.TransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getAccountnoorcardnoormsisdn();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAccountname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTransactionid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNarration();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTranscurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getExpirydatemonth();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getExpirydateyear();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getCvv();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string PayPartnerServiceId = 1;
 * @return {string}
 */
proto.eganow.api.payment.TransferRequest.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferRequest} returns this
 */
proto.eganow.api.payment.TransferRequest.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float Amount = 2;
 * @return {number}
 */
proto.eganow.api.payment.TransferRequest.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.eganow.api.payment.TransferRequest} returns this
 */
proto.eganow.api.payment.TransferRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string AccountNoOrCardNoOrMSISDN = 3;
 * @return {string}
 */
proto.eganow.api.payment.TransferRequest.prototype.getAccountnoorcardnoormsisdn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferRequest} returns this
 */
proto.eganow.api.payment.TransferRequest.prototype.setAccountnoorcardnoormsisdn = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string AccountName = 4;
 * @return {string}
 */
proto.eganow.api.payment.TransferRequest.prototype.getAccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferRequest} returns this
 */
proto.eganow.api.payment.TransferRequest.prototype.setAccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string TransactionId = 5;
 * @return {string}
 */
proto.eganow.api.payment.TransferRequest.prototype.getTransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferRequest} returns this
 */
proto.eganow.api.payment.TransferRequest.prototype.setTransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Narration = 6;
 * @return {string}
 */
proto.eganow.api.payment.TransferRequest.prototype.getNarration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferRequest} returns this
 */
proto.eganow.api.payment.TransferRequest.prototype.setNarration = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string TransCurrencyIso = 7;
 * @return {string}
 */
proto.eganow.api.payment.TransferRequest.prototype.getTranscurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferRequest} returns this
 */
proto.eganow.api.payment.TransferRequest.prototype.setTranscurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 ExpiryDateMonth = 8;
 * @return {number}
 */
proto.eganow.api.payment.TransferRequest.prototype.getExpirydatemonth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.eganow.api.payment.TransferRequest} returns this
 */
proto.eganow.api.payment.TransferRequest.prototype.setExpirydatemonth = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 ExpiryDateYear = 9;
 * @return {number}
 */
proto.eganow.api.payment.TransferRequest.prototype.getExpirydateyear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.eganow.api.payment.TransferRequest} returns this
 */
proto.eganow.api.payment.TransferRequest.prototype.setExpirydateyear = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 Cvv = 10;
 * @return {number}
 */
proto.eganow.api.payment.TransferRequest.prototype.getCvv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.eganow.api.payment.TransferRequest} returns this
 */
proto.eganow.api.payment.TransferRequest.prototype.setCvv = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string LanguageId = 11;
 * @return {string}
 */
proto.eganow.api.payment.TransferRequest.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferRequest} returns this
 */
proto.eganow.api.payment.TransferRequest.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.payment.TransferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.payment.TransferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.payment.TransferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.TransferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    referenceno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    transstatus: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.payment.TransferResponse}
 */
proto.eganow.api.payment.TransferResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.payment.TransferResponse;
  return proto.eganow.api.payment.TransferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.payment.TransferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.payment.TransferResponse}
 */
proto.eganow.api.payment.TransferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.payment.TransferResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.payment.TransferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.payment.TransferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.TransferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReferenceno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTransstatus();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool Status = 1;
 * @return {boolean}
 */
proto.eganow.api.payment.TransferResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.eganow.api.payment.TransferResponse} returns this
 */
proto.eganow.api.payment.TransferResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.eganow.api.payment.TransferResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferResponse} returns this
 */
proto.eganow.api.payment.TransferResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ReferenceNo = 3;
 * @return {string}
 */
proto.eganow.api.payment.TransferResponse.prototype.getReferenceno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferResponse} returns this
 */
proto.eganow.api.payment.TransferResponse.prototype.setReferenceno = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string TransStatus = 4;
 * @return {string}
 */
proto.eganow.api.payment.TransferResponse.prototype.getTransstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferResponse} returns this
 */
proto.eganow.api.payment.TransferResponse.prototype.setTransstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.payment.QueryTransferStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.payment.QueryTransferStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.payment.QueryTransferStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.QueryTransferStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.payment.QueryTransferStatusRequest}
 */
proto.eganow.api.payment.QueryTransferStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.payment.QueryTransferStatusRequest;
  return proto.eganow.api.payment.QueryTransferStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.payment.QueryTransferStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.payment.QueryTransferStatusRequest}
 */
proto.eganow.api.payment.QueryTransferStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.payment.QueryTransferStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.payment.QueryTransferStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.payment.QueryTransferStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.QueryTransferStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string TransactionId = 1;
 * @return {string}
 */
proto.eganow.api.payment.QueryTransferStatusRequest.prototype.getTransactionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.QueryTransferStatusRequest} returns this
 */
proto.eganow.api.payment.QueryTransferStatusRequest.prototype.setTransactionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string LanguageId = 3;
 * @return {string}
 */
proto.eganow.api.payment.QueryTransferStatusRequest.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.QueryTransferStatusRequest} returns this
 */
proto.eganow.api.payment.QueryTransferStatusRequest.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.payment.QueryTransferStatusTransferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.payment.QueryTransferStatusTransferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    referenceno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    transstatus: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.payment.QueryTransferStatusTransferResponse}
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.payment.QueryTransferStatusTransferResponse;
  return proto.eganow.api.payment.QueryTransferStatusTransferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.payment.QueryTransferStatusTransferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.payment.QueryTransferStatusTransferResponse}
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.payment.QueryTransferStatusTransferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.payment.QueryTransferStatusTransferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReferenceno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTransstatus();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool Status = 1;
 * @return {boolean}
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.eganow.api.payment.QueryTransferStatusTransferResponse} returns this
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.QueryTransferStatusTransferResponse} returns this
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ReferenceNo = 3;
 * @return {string}
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.prototype.getReferenceno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.QueryTransferStatusTransferResponse} returns this
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.prototype.setReferenceno = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string TransStatus = 4;
 * @return {string}
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.prototype.getTransstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.QueryTransferStatusTransferResponse} returns this
 */
proto.eganow.api.payment.QueryTransferStatusTransferResponse.prototype.setTransstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.eganow.api.payment.TransferCallbackResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.eganow.api.payment.TransferCallbackResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.TransferCallbackResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    transactionrefno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    transtypedrcr: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    middlewaretransid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    eganowtransrefno: jspb.Message.getFieldWithDefault(msg, 6, ""),
    transactionstatus: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.eganow.api.payment.TransferCallbackResponse}
 */
proto.eganow.api.payment.TransferCallbackResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.eganow.api.payment.TransferCallbackResponse;
  return proto.eganow.api.payment.TransferCallbackResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.eganow.api.payment.TransferCallbackResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.eganow.api.payment.TransferCallbackResponse}
 */
proto.eganow.api.payment.TransferCallbackResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionrefno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranstypedrcr(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiddlewaretransid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEganowtransrefno(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.eganow.api.payment.TransferCallbackResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.eganow.api.payment.TransferCallbackResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.eganow.api.payment.TransferCallbackResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransactionrefno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTranstypedrcr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getMiddlewaretransid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEganowtransrefno();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTransactionstatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string MerchantId = 1;
 * @return {string}
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.getMerchantid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferCallbackResponse} returns this
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.setMerchantid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string TransactionRefNo = 2;
 * @return {string}
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.getTransactionrefno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferCallbackResponse} returns this
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.setTransactionrefno = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string TransTypeDRCR = 3;
 * @return {string}
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.getTranstypedrcr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferCallbackResponse} returns this
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.setTranstypedrcr = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool Status = 4;
 * @return {boolean}
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.eganow.api.payment.TransferCallbackResponse} returns this
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string MiddlewareTransId = 5;
 * @return {string}
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.getMiddlewaretransid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferCallbackResponse} returns this
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.setMiddlewaretransid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string EganowTransRefNo = 6;
 * @return {string}
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.getEganowtransrefno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferCallbackResponse} returns this
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.setEganowtransrefno = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string TransactionStatus = 7;
 * @return {string}
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.getTransactionstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.eganow.api.payment.TransferCallbackResponse} returns this
 */
proto.eganow.api.payment.TransferCallbackResponse.prototype.setTransactionstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


goog.object.extend(exports, proto.eganow.api.payment);
