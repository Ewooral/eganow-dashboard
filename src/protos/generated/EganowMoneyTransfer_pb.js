// source: EganowMoneyTransfer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustStatementListResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustStatementResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustTransListResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustTransRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustTransResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerBalanceRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.MoneyTransferCountryMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.MoneyTransferEmptyMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.MoneyTransferRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.MoneyTransferSuccessMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.PayPartnerIdRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.PayPartnerListRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.PayPartnerListResponseMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.PayPartnerRequestMessage', null, global);
goog.exportSymbol('proto.EganowMoneyTransfer.VerifyCustomerPinMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.MoneyTransferEmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.MoneyTransferEmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.MoneyTransferEmptyMessage.displayName = 'proto.EganowMoneyTransfer.MoneyTransferEmptyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.MoneyTransferCountryMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.MoneyTransferCountryMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.MoneyTransferCountryMessage.displayName = 'proto.EganowMoneyTransfer.MoneyTransferCountryMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.displayName = 'proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.MoneyTransferRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.MoneyTransferRequestMessage.displayName = 'proto.EganowMoneyTransfer.MoneyTransferRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.MoneyTransferSuccessMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.displayName = 'proto.EganowMoneyTransfer.MoneyTransferSuccessMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.displayName = 'proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.displayName = 'proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.displayName = 'proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.repeatedFields_, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.displayName = 'proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.displayName = 'proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.displayName = 'proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.displayName = 'proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.PayPartnerListRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.PayPartnerListRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.PayPartnerListRequestMessage.displayName = 'proto.EganowMoneyTransfer.PayPartnerListRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.PayPartnerIdRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.PayPartnerIdRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.displayName = 'proto.EganowMoneyTransfer.PayPartnerIdRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.PayPartnerRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.PayPartnerRequestMessage.displayName = 'proto.EganowMoneyTransfer.PayPartnerRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.PayPartnerListResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.EganowMoneyTransfer.PayPartnerListResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.EganowMoneyTransfer.PayPartnerListResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.PayPartnerListResponseMessage.displayName = 'proto.EganowMoneyTransfer.PayPartnerListResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.VerifyCustomerPinMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.VerifyCustomerPinMessage.displayName = 'proto.EganowMoneyTransfer.VerifyCustomerPinMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.displayName = 'proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.displayName = 'proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.displayName = 'proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.displayName = 'proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.displayName = 'proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.displayName = 'proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.displayName = 'proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.displayName = 'proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.displayName = 'proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.displayName = 'proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerRequestMessage.displayName = 'proto.EganowMoneyTransfer.CustomerRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerBalanceRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerBalanceRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.displayName = 'proto.EganowMoneyTransfer.CustomerBalanceRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.displayName = 'proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.displayName = 'proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.displayName = 'proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.repeatedFields_, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.displayName = 'proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.displayName = 'proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.displayName = 'proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.displayName = 'proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustTransRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustTransRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustTransRequestMessage.displayName = 'proto.EganowMoneyTransfer.CustTransRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustTransResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustTransResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustTransResponseMessage.displayName = 'proto.EganowMoneyTransfer.CustTransResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustTransListResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.EganowMoneyTransfer.CustTransListResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustTransListResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustTransListResponseMessage.displayName = 'proto.EganowMoneyTransfer.CustTransListResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustStatementResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustStatementResponseMessage.displayName = 'proto.EganowMoneyTransfer.CustStatementResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EganowMoneyTransfer.CustStatementListResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.EganowMoneyTransfer.CustStatementListResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.EganowMoneyTransfer.CustStatementListResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EganowMoneyTransfer.CustStatementListResponseMessage.displayName = 'proto.EganowMoneyTransfer.CustStatementListResponseMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.MoneyTransferEmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.MoneyTransferEmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.MoneyTransferEmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MoneyTransferEmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.MoneyTransferEmptyMessage}
 */
proto.EganowMoneyTransfer.MoneyTransferEmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.MoneyTransferEmptyMessage;
  return proto.EganowMoneyTransfer.MoneyTransferEmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.MoneyTransferEmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.MoneyTransferEmptyMessage}
 */
proto.EganowMoneyTransfer.MoneyTransferEmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.MoneyTransferEmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.MoneyTransferEmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.MoneyTransferEmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MoneyTransferEmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.MoneyTransferCountryMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.MoneyTransferCountryMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.MoneyTransferCountryMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MoneyTransferCountryMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.MoneyTransferCountryMessage}
 */
proto.EganowMoneyTransfer.MoneyTransferCountryMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.MoneyTransferCountryMessage;
  return proto.EganowMoneyTransfer.MoneyTransferCountryMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.MoneyTransferCountryMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.MoneyTransferCountryMessage}
 */
proto.EganowMoneyTransfer.MoneyTransferCountryMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.MoneyTransferCountryMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.MoneyTransferCountryMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.MoneyTransferCountryMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MoneyTransferCountryMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferCountryMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferCountryMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferCountryMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string languageId = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferCountryMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferCountryMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferCountryMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accountname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    currencyiso: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage;
  return proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccountname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string CustomerId = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage} returns this
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string AccountNo = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.prototype.getAccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage} returns this
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.prototype.setAccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string AccountName = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.prototype.getAccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage} returns this
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.prototype.setAccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string CurrencyISO = 4;
 * @return {string}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage} returns this
 */
proto.EganowMoneyTransfer.EganowBeneficiaryResponseMessage.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.MoneyTransferRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    senderpaypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    beneficiarypaypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sendertranscurrecyiso: jspb.Message.getFieldWithDefault(msg, 3, ""),
    beneficiarycurrecyiso: jspb.Message.getFieldWithDefault(msg, 4, ""),
    beneficiaryaccountno: jspb.Message.getFieldWithDefault(msg, 5, ""),
    beneficiaryaccountname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    transamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    senderaccountno: jspb.Message.getFieldWithDefault(msg, 8, ""),
    senderaccountname: jspb.Message.getFieldWithDefault(msg, 9, ""),
    mobileorweborussd: jspb.Message.getFieldWithDefault(msg, 11, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 12, ""),
    transnarration: jspb.Message.getFieldWithDefault(msg, 13, ""),
    senderpaypartnergroupid: jspb.Message.getFieldWithDefault(msg, 14, 0),
    beneficiarypaypartnergroupid: jspb.Message.getFieldWithDefault(msg, 15, 0),
    remembermysourcepaymentaccountyesno: jspb.Message.getFieldWithDefault(msg, 16, ""),
    purposeoftransferorpayment: jspb.Message.getFieldWithDefault(msg, 17, ""),
    sendercountrycode: jspb.Message.getFieldWithDefault(msg, 40, ""),
    beneficiarycountrycode: jspb.Message.getFieldWithDefault(msg, 41, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.MoneyTransferRequestMessage;
  return proto.EganowMoneyTransfer.MoneyTransferRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderpaypartnerserviceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiarypaypartnerserviceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSendertranscurrecyiso(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiarycurrecyiso(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryaccountno(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryaccountname(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTransamount(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderaccountno(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderaccountname(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileorweborussd(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransnarration(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSenderpaypartnergroupid(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBeneficiarypaypartnergroupid(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemembermysourcepaymentaccountyesno(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPurposeoftransferorpayment(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setSendercountrycode(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiarycountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.MoneyTransferRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSenderpaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBeneficiarypaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSendertranscurrecyiso();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBeneficiarycurrecyiso();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBeneficiaryaccountno();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBeneficiaryaccountname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTransamount();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getSenderaccountno();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSenderaccountname();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMobileorweborussd();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTransnarration();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getSenderpaypartnergroupid();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getBeneficiarypaypartnergroupid();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getRemembermysourcepaymentaccountyesno();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPurposeoftransferorpayment();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getSendercountrycode();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getBeneficiarycountrycode();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string senderPayPartnerServiceId = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getSenderpaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setSenderpaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string beneficiaryPayPartnerServiceId = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getBeneficiarypaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setBeneficiarypaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string senderTransCurrecyIso = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getSendertranscurrecyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setSendertranscurrecyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string beneficiaryCurrecyIso = 4;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getBeneficiarycurrecyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setBeneficiarycurrecyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string beneficiaryAccountNo = 5;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getBeneficiaryaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setBeneficiaryaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string beneficiaryAccountName = 6;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getBeneficiaryaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setBeneficiaryaccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double transAmount = 7;
 * @return {number}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getTransamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setTransamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string senderAccountNo = 8;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getSenderaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setSenderaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string senderAccountName = 9;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getSenderaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setSenderaccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string mobileOrWebOrUSSD = 11;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getMobileorweborussd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setMobileorweborussd = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string customerId = 12;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string transNarration = 13;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getTransnarration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setTransnarration = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int32 senderPaypartnerGroupId = 14;
 * @return {number}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getSenderpaypartnergroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setSenderpaypartnergroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 beneficiaryPaypartnerGroupId = 15;
 * @return {number}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getBeneficiarypaypartnergroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setBeneficiarypaypartnergroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string rememberMySourcePaymentAccountYesNo = 16;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getRemembermysourcepaymentaccountyesno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setRemembermysourcepaymentaccountyesno = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string purposeOfTransferOrPayment = 17;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getPurposeoftransferorpayment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setPurposeoftransferorpayment = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string senderCountryCode = 40;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getSendercountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setSendercountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional string beneficiaryCountryCode = 41;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getBeneficiarycountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setBeneficiarycountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.MoneyTransferSuccessMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messagesuccessfulorfailed: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    registrationerrorcode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    otpiframe: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.MoneyTransferSuccessMessage}
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.MoneyTransferSuccessMessage;
  return proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.MoneyTransferSuccessMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.MoneyTransferSuccessMessage}
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagesuccessfulorfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationerrorcode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtpiframe(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.MoneyTransferSuccessMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessagesuccessfulorfailed();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegistrationerrorcode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOtpiframe();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferSuccessMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string messageSuccessfulOrFailed = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.getMessagesuccessfulorfailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferSuccessMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.setMessagesuccessfulorfailed = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferSuccessMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string registrationErrorCode = 4;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.getRegistrationerrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferSuccessMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.setRegistrationerrorcode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string otpIframe = 5;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.getOtpiframe = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferSuccessMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferSuccessMessage.prototype.setOtpiframe = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage;
  return proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    beneficiarycountrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sendingcurrencycode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    beneficiarycurrencycode: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage;
  return proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiarycountrycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSendingcurrencycode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiarycurrencycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeneficiarycountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSendingcurrencycode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBeneficiarycurrencycode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string beneficiaryCountryCode = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.prototype.getBeneficiarycountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.prototype.setBeneficiarycountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sendingCurrencyCode = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.prototype.getSendingcurrencycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.prototype.setSendingcurrencycode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string beneficiaryCurrencyCode = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.prototype.getBeneficiarycurrencycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerPaymentSourceAccountsRequestMessage.prototype.setBeneficiarycurrencycode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceaccountname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sourceaccountno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paypartnerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paypartnertypeid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    paypartnerservicename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    paypartnergroupname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    currencyiso: jspb.Message.getFieldWithDefault(msg, 8, ""),
    displaysourceaccountno: jspb.Message.getFieldWithDefault(msg, 9, ""),
    sourceaccountstatus: jspb.Message.getFieldWithDefault(msg, 10, ""),
    paypartnergroupcode: jspb.Message.getFieldWithDefault(msg, 11, 0),
    logourl: jspb.Message.getFieldWithDefault(msg, 30, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage;
  return proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceaccountname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceaccountno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnertypeid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerservicename(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnergroupname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaysourceaccountno(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceaccountstatus(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnergroupcode(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogourl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceaccountname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSourceaccountno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaypartnerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaypartnertypeid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPaypartnerservicename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPaypartnergroupname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDisplaysourceaccountno();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSourceaccountstatus();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPaypartnergroupcode();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getLogourl();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
};


/**
 * optional string sourceAccountName = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getSourceaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setSourceaccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sourceAccountNo = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getSourceaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setSourceaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PayPartnerId = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getPaypartnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setPaypartnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 payPartnerTypeId = 4;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getPaypartnertypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setPaypartnertypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string paypartnerServiceName = 5;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getPaypartnerservicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setPaypartnerservicename = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string paypartnerGroupName = 6;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getPaypartnergroupname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setPaypartnergroupname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string payPartnerServiceId = 7;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string CurrencyIso = 8;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string displaySourceAccountNo = 9;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getDisplaysourceaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setDisplaysourceaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string sourceAccountStatus = 10;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getSourceaccountstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setSourceaccountstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 paypartnerGroupCode = 11;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getPaypartnergroupcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setPaypartnergroupcode = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string logoUrl = 30;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.getLogourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.prototype.setLogourl = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    custexistingaccountsList: jspb.Message.toObjectList(msg.getCustexistingaccountsList(),
    proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage;
  return proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage;
      reader.readMessage(value,proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.deserializeBinaryFromReader);
      msg.addCustexistingaccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustexistingaccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CustomerExistingSourceAccountsMessage custExistingAccounts = 1;
 * @return {!Array<!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage>}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.prototype.getCustexistingaccountsList = function() {
  return /** @type{!Array<!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage, 1));
};


/**
 * @param {!Array<!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage>} value
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage} returns this
*/
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.prototype.setCustexistingaccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage}
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.prototype.addCustexistingaccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.EganowMoneyTransfer.CustomerExistingSourceAccountsMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerExistingSourceAccountsListMessage.prototype.clearCustexistingaccountsList = function() {
  return this.setCustexistingaccountsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    destinationpaypartnertypeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destinationpaypartnerid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    destinationaccountno: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage}
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage;
  return proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage}
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationpaypartnertypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationpaypartnerid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationaccountno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestinationpaypartnertypeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestinationpaypartnerid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDestinationaccountno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string destinationPayPartnerTypeId = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.prototype.getDestinationpaypartnertypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.prototype.setDestinationpaypartnertypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string destinationPayPartnerId = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.prototype.getDestinationpaypartnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.prototype.setDestinationpaypartnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string destinationAccountNo = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.prototype.getDestinationaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MoneyTransferVerifyDestinationAccountNoRequestMessage.prototype.setDestinationaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourcepaypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destinationpaypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    transamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    senderaccountno: jspb.Message.getFieldWithDefault(msg, 4, ""),
    beneficiaryaccountno: jspb.Message.getFieldWithDefault(msg, 7, ""),
    sendercountrycode: jspb.Message.getFieldWithDefault(msg, 40, ""),
    beneficiarycountrycode: jspb.Message.getFieldWithDefault(msg, 41, ""),
    senderpaypartnergroupcode: jspb.Message.getFieldWithDefault(msg, 42, 0),
    beneficiarypaypartnergroupcode: jspb.Message.getFieldWithDefault(msg, 43, 0),
    sendertranscurrecyiso: jspb.Message.getFieldWithDefault(msg, 5, ""),
    beneficiarycurrecyiso: jspb.Message.getFieldWithDefault(msg, 6, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage;
  return proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcepaypartnerserviceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationpaypartnerserviceid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTransamount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderaccountno(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryaccountno(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setSendercountrycode(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiarycountrycode(value);
      break;
    case 42:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSenderpaypartnergroupcode(value);
      break;
    case 43:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBeneficiarypaypartnergroupcode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSendertranscurrecyiso(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiarycurrecyiso(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourcepaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestinationpaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTransamount();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getSenderaccountno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBeneficiaryaccountno();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSendercountrycode();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getBeneficiarycountrycode();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getSenderpaypartnergroupcode();
  if (f !== 0) {
    writer.writeInt32(
      42,
      f
    );
  }
  f = message.getBeneficiarypaypartnergroupcode();
  if (f !== 0) {
    writer.writeInt32(
      43,
      f
    );
  }
  f = message.getSendertranscurrecyiso();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBeneficiarycurrecyiso();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string sourcePayPartnerServiceId = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getSourcepaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setSourcepaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string destinationPayPartnerServiceId = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getDestinationpaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setDestinationpaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double transAmount = 3;
 * @return {number}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getTransamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setTransamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string SenderAccountNo = 4;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getSenderaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setSenderaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string beneficiaryAccountNo = 7;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getBeneficiaryaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setBeneficiaryaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string SenderCountryCode = 40;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getSendercountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setSendercountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional string beneficiaryCountryCode = 41;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getBeneficiarycountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setBeneficiarycountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional int32 senderPaypartnerGroupCode = 42;
 * @return {number}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getSenderpaypartnergroupcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 42, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setSenderpaypartnergroupcode = function(value) {
  return jspb.Message.setProto3IntField(this, 42, value);
};


/**
 * optional int32 beneficiaryPaypartnerGroupCode = 43;
 * @return {number}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getBeneficiarypaypartnergroupcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 43, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setBeneficiarypaypartnergroupcode = function(value) {
  return jspb.Message.setProto3IntField(this, 43, value);
};


/**
 * optional string senderTransCurrecyIso = 5;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getSendertranscurrecyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setSendertranscurrecyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string beneficiaryCurrecyIso = 6;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getBeneficiarycurrecyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setBeneficiarycurrecyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messagesuccessfulorfailed: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    transamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    chargeamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    taxamountcharged: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    totaltranspluschargeamountplustax: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    countrycode: jspb.Message.getFieldWithDefault(msg, 50, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage;
  return proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagesuccessfulorfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTransamount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setChargeamount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTaxamountcharged(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotaltranspluschargeamountplustax(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessagesuccessfulorfailed();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTransamount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getChargeamount();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getTaxamountcharged();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getTotaltranspluschargeamountplustax();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string messageSuccessfulOrFailed = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.getMessagesuccessfulorfailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.setMessagesuccessfulorfailed = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double transAmount = 4;
 * @return {number}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.getTransamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.setTransamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double chargeAmount = 5;
 * @return {number}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.getChargeamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.setChargeamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double taxAmountcharged = 6;
 * @return {number}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.getTaxamountcharged = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.setTaxamountcharged = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double totaltransPlusChargeAmountPlusTax = 10;
 * @return {number}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.getTotaltranspluschargeamountplustax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.setTotaltranspluschargeamountplustax = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string countryCode = 50;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CalculateTransChargeResponseMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.PayPartnerListRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.PayPartnerListRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.PayPartnerListRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.PayPartnerListRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnertypeid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.PayPartnerListRequestMessage}
 */
proto.EganowMoneyTransfer.PayPartnerListRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.PayPartnerListRequestMessage;
  return proto.EganowMoneyTransfer.PayPartnerListRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.PayPartnerListRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.PayPartnerListRequestMessage}
 */
proto.EganowMoneyTransfer.PayPartnerListRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnertypeid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.PayPartnerListRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.PayPartnerListRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.PayPartnerListRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.PayPartnerListRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnertypeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 payPartnerTypeId = 1;
 * @return {number}
 */
proto.EganowMoneyTransfer.PayPartnerListRequestMessage.prototype.getPaypartnertypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerListRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerListRequestMessage.prototype.setPaypartnertypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.PayPartnerIdRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnerid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.PayPartnerIdRequestMessage}
 */
proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.PayPartnerIdRequestMessage;
  return proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.PayPartnerIdRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.PayPartnerIdRequestMessage}
 */
proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.PayPartnerIdRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnerid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 payPartnerId = 1;
 * @return {number}
 */
proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.prototype.getPaypartnerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerIdRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerIdRequestMessage.prototype.setPaypartnerid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.PayPartnerRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paypartnername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paypartnertypeid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    paypartnertypedesc: jspb.Message.getFieldWithDefault(msg, 4, ""),
    internalorexternal: jspb.Message.getFieldWithDefault(msg, 5, ""),
    paypartnerlogourl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    paypartnerservicename: jspb.Message.getFieldWithDefault(msg, 8, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 50, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.PayPartnerRequestMessage;
  return proto.EganowMoneyTransfer.PayPartnerRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnername(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnertypeid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnertypedesc(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setInternalorexternal(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerlogourl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerservicename(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.PayPartnerRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaypartnername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaypartnertypeid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPaypartnertypedesc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getInternalorexternal();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPaypartnerlogourl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPaypartnerservicename();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string payPartnerId = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.getPaypartnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.setPaypartnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payPartnerName = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.getPaypartnername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.setPaypartnername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 payPartnerTypeId = 3;
 * @return {number}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.getPaypartnertypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.setPaypartnertypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string payPartnerTypeDesc = 4;
 * @return {string}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.getPaypartnertypedesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.setPaypartnertypedesc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string InternalOrExternal = 5;
 * @return {string}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.getInternalorexternal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.setInternalorexternal = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string payPartnerLogoUrl = 6;
 * @return {string}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.getPaypartnerlogourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.setPaypartnerlogourl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string payPartnerServiceId = 7;
 * @return {string}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string payPartnerServiceName = 8;
 * @return {string}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.getPaypartnerservicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.setPaypartnerservicename = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string countryCode = 50;
 * @return {string}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.EganowMoneyTransfer.PayPartnerListResponseMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.PayPartnerListResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.PayPartnerListResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.PayPartnerListResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.PayPartnerListResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnersmomoList: jspb.Message.toObjectList(msg.getPaypartnersmomoList(),
    proto.EganowMoneyTransfer.PayPartnerRequestMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.PayPartnerListResponseMessage}
 */
proto.EganowMoneyTransfer.PayPartnerListResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.PayPartnerListResponseMessage;
  return proto.EganowMoneyTransfer.PayPartnerListResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.PayPartnerListResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.PayPartnerListResponseMessage}
 */
proto.EganowMoneyTransfer.PayPartnerListResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.EganowMoneyTransfer.PayPartnerRequestMessage;
      reader.readMessage(value,proto.EganowMoneyTransfer.PayPartnerRequestMessage.deserializeBinaryFromReader);
      msg.addPaypartnersmomo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.PayPartnerListResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.PayPartnerListResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.PayPartnerListResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.PayPartnerListResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnersmomoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.EganowMoneyTransfer.PayPartnerRequestMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PayPartnerRequestMessage payPartnersMomo = 1;
 * @return {!Array<!proto.EganowMoneyTransfer.PayPartnerRequestMessage>}
 */
proto.EganowMoneyTransfer.PayPartnerListResponseMessage.prototype.getPaypartnersmomoList = function() {
  return /** @type{!Array<!proto.EganowMoneyTransfer.PayPartnerRequestMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.EganowMoneyTransfer.PayPartnerRequestMessage, 1));
};


/**
 * @param {!Array<!proto.EganowMoneyTransfer.PayPartnerRequestMessage>} value
 * @return {!proto.EganowMoneyTransfer.PayPartnerListResponseMessage} returns this
*/
proto.EganowMoneyTransfer.PayPartnerListResponseMessage.prototype.setPaypartnersmomoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.EganowMoneyTransfer.PayPartnerRequestMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.EganowMoneyTransfer.PayPartnerRequestMessage}
 */
proto.EganowMoneyTransfer.PayPartnerListResponseMessage.prototype.addPaypartnersmomo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.EganowMoneyTransfer.PayPartnerRequestMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.EganowMoneyTransfer.PayPartnerListResponseMessage} returns this
 */
proto.EganowMoneyTransfer.PayPartnerListResponseMessage.prototype.clearPaypartnersmomoList = function() {
  return this.setPaypartnersmomoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.VerifyCustomerPinMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.VerifyCustomerPinMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customerpin: jspb.Message.getFieldWithDefault(msg, 2, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.VerifyCustomerPinMessage}
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.VerifyCustomerPinMessage;
  return proto.EganowMoneyTransfer.VerifyCustomerPinMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.VerifyCustomerPinMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.VerifyCustomerPinMessage}
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerpin(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.VerifyCustomerPinMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.VerifyCustomerPinMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomerpin();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.VerifyCustomerPinMessage} returns this
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string customerPIN = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.prototype.getCustomerpin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.VerifyCustomerPinMessage} returns this
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.prototype.setCustomerpin = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string countryCode = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.VerifyCustomerPinMessage} returns this
 */
proto.EganowMoneyTransfer.VerifyCustomerPinMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage}
 */
proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage;
  return proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage}
 */
proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage} returns this
 */
proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage} returns this
 */
proto.EganowMoneyTransfer.IsCustomerPinValidResponseMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paypartnergroupcode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage;
  return proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnergroupcode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaypartnergroupcode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 paypartnerGroupCode = 2;
 * @return {number}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.prototype.getPaypartnergroupcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.prototype.setPaypartnergroupcode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage}
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage;
  return proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage}
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payPartnerServiceId = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryListByProviderRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    beneficiarymobilenumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 50, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage;
  return proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiarymobilenumber(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeneficiarymobilenumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string beneficiaryMobileNumber = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.prototype.getBeneficiarymobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage} returns this
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.prototype.setBeneficiarymobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string countryCode = 50;
 * @return {string}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage} returns this
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage} returns this
 */
proto.EganowMoneyTransfer.EganowBeneficiaryMobileNoRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    beneficiaryaccountname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    beneficiaryaccountno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayaccountno: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paypartnerid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paypartnertypeid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    paypartnername: jspb.Message.getFieldWithDefault(msg, 6, ""),
    paypartnersymbol: jspb.Message.getFieldWithDefault(msg, 7, ""),
    currencyiso: jspb.Message.getFieldWithDefault(msg, 8, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    bankinstitutionname: jspb.Message.getFieldWithDefault(msg, 10, ""),
    bankinstitutioncode: jspb.Message.getFieldWithDefault(msg, 11, ""),
    bankbranchname: jspb.Message.getFieldWithDefault(msg, 12, ""),
    bankbranchcode: jspb.Message.getFieldWithDefault(msg, 13, ""),
    displaybeneficiaryaccountno: jspb.Message.getFieldWithDefault(msg, 14, ""),
    paypartnergroupcode: jspb.Message.getFieldWithDefault(msg, 15, 0),
    paypartnerservicename: jspb.Message.getFieldWithDefault(msg, 16, ""),
    paypartnergroupname: jspb.Message.getFieldWithDefault(msg, 17, ""),
    countryname: jspb.Message.getFieldWithDefault(msg, 18, ""),
    logourl: jspb.Message.getFieldWithDefault(msg, 30, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage;
  return proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryaccountname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryaccountno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayaccountno(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnertypeid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnername(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnersymbol(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankinstitutionname(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankinstitutioncode(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankbranchname(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankbranchcode(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaybeneficiaryaccountno(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnergroupcode(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerservicename(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnergroupname(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryname(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogourl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeneficiaryaccountname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBeneficiaryaccountno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayaccountno();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaypartnerid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPaypartnertypeid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPaypartnername();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPaypartnersymbol();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBankinstitutionname();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBankinstitutioncode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getBankbranchname();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBankbranchcode();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getDisplaybeneficiaryaccountno();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getPaypartnergroupcode();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getPaypartnerservicename();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPaypartnergroupname();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getCountryname();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getLogourl();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
};


/**
 * optional string beneficiaryAccountName = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getBeneficiaryaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setBeneficiaryaccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string beneficiaryAccountNo = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getBeneficiaryaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setBeneficiaryaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string displayAccountNo = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getDisplayaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setDisplayaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string payPartnerId = 4;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getPaypartnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setPaypartnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 payPartnerTypeId = 5;
 * @return {number}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getPaypartnertypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setPaypartnertypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string payPartnerName = 6;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getPaypartnername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setPaypartnername = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string payPartnerSymbol = 7;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getPaypartnersymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setPaypartnersymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string CurrencyIso = 8;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string CountryCode = 9;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string BankInstitutionName = 10;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getBankinstitutionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setBankinstitutionname = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string BankInstitutionCode = 11;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getBankinstitutioncode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setBankinstitutioncode = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string BankBranchName = 12;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getBankbranchname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setBankbranchname = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string BankBranchCode = 13;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getBankbranchcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setBankbranchcode = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string displayBeneficiaryAccountNo = 14;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getDisplaybeneficiaryaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setDisplaybeneficiaryaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional int32 paypartnerGroupCode = 15;
 * @return {number}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getPaypartnergroupcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setPaypartnergroupcode = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string paypartnerServiceName = 16;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getPaypartnerservicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setPaypartnerservicename = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string paypartnerGroupName = 17;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getPaypartnergroupname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setPaypartnergroupname = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string countryName = 18;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getCountryname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setCountryname = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string logoUrl = 30;
 * @return {string}
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.getLogourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.prototype.setLogourl = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    beneficiarylistList: jspb.Message.toObjectList(msg.getBeneficiarylistList(),
    proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage;
  return proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage;
      reader.readMessage(value,proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.deserializeBinaryFromReader);
      msg.addBeneficiarylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeneficiarylistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BeneficiaryByPayPartnerResponseMessage beneficiaryList = 1;
 * @return {!Array<!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage>}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.prototype.getBeneficiarylistList = function() {
  return /** @type{!Array<!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage, 1));
};


/**
 * @param {!Array<!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage>} value
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage} returns this
*/
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.prototype.setBeneficiarylistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage}
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.prototype.addBeneficiarylist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.EganowMoneyTransfer.BeneficiaryByPayPartnerResponseMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage} returns this
 */
proto.EganowMoneyTransfer.BeneficiaryListByPayPartnerResponseMessage.prototype.clearBeneficiarylistList = function() {
  return this.setBeneficiarylistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    sourceaccountno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sourceaccountname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    paypartnergroupcode: jspb.Message.getFieldWithDefault(msg, 6, 0),
    currencyiso: jspb.Message.getFieldWithDefault(msg, 7, ""),
    otpvalue: jspb.Message.getFieldWithDefault(msg, 8, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 50, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage;
  return proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceaccountno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceaccountname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnergroupcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtpvalue(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSourceaccountno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSourceaccountname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPaypartnergroupcode();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getOtpvalue();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string sourceAccountNo = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.getSourceaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.setSourceaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sourceAccountName = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.getSourceaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.setSourceaccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string payPartnerServiceId = 5;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 paypartnerGroupCode = 6;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.getPaypartnergroupcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.setPaypartnergroupcode = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string currencyIso = 7;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string otpValue = 8;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.getOtpvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.setOtpvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string countryCode = 50;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardnumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nameoncard: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expirydatemonth: jspb.Message.getFieldWithDefault(msg, 5, 0),
    expirydateyear: jspb.Message.getFieldWithDefault(msg, 6, 0),
    cvv: jspb.Message.getFieldWithDefault(msg, 7, ""),
    mobileorweb: jspb.Message.getFieldWithDefault(msg, 8, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 50, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage;
  return proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardnumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameoncard(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExpirydatemonth(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExpirydateyear(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCvv(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileorweb(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardnumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNameoncard();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpirydatemonth();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getExpirydateyear();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCvv();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMobileorweb();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string cardNumber = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.getCardnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.setCardnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nameOnCard = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.getNameoncard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.setNameoncard = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 expiryDateMonth = 5;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.getExpirydatemonth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.setExpirydatemonth = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 expiryDateYear = 6;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.getExpirydateyear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.setExpirydateyear = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string cvv = 7;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.getCvv = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.setCvv = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string mobileOrWeb = 8;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.getMobileorweb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.setMobileorweb = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string countryCode = 50;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messagesuccessfulorfailed: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    redirectotpurl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage;
  return proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagesuccessfulorfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectotpurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessagesuccessfulorfailed();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRedirectotpurl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string messageSuccessfulOrFailed = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.prototype.getMessagesuccessfulorfailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.prototype.setMessagesuccessfulorfailed = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string redirectOTPUrl = 4;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.prototype.getRedirectotpurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerSourceAcctCardResponseMessage.prototype.setRedirectotpurl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    beneficiaryaccountno: jspb.Message.getFieldWithDefault(msg, 2, ""),
    beneficiaryaccountname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paypartnergroupcode: jspb.Message.getFieldWithDefault(msg, 5, 0),
    countrycode: jspb.Message.getFieldWithDefault(msg, 50, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage;
  return proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryaccountno(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryaccountname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnergroupcode(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBeneficiaryaccountno();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBeneficiaryaccountname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPaypartnergroupcode();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string beneficiaryAccountNo = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.getBeneficiaryaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.setBeneficiaryaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string beneficiaryAccountName = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.getBeneficiaryaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.setBeneficiaryaccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string payPartnerServiceId = 4;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 paypartnerGroupCode = 5;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.getPaypartnergroupcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.setPaypartnergroupcode = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string countryCode = 50;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerBeneficiaryAcctRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerRequestMessage;
  return proto.EganowMoneyTransfer.CustomerRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string countryCode = 50;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerBalanceRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mobileorweborussd: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerBalanceRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerBalanceRequestMessage;
  return proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerBalanceRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerBalanceRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileorweborussd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerBalanceRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMobileorweborussd();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerBalanceRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mobileOrWebOrUSSD = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.prototype.getMobileorweborussd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerBalanceRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerBalanceRequestMessage.prototype.setMobileorweborussd = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    availablebalance: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    lastlogindatestring: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lastloginlocation: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lastloginchannel: jspb.Message.getFieldWithDefault(msg, 6, ""),
    currencyiso: jspb.Message.getFieldWithDefault(msg, 7, ""),
    countryflagurl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    displayaccountno: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse;
  return proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAvailablebalance(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastlogindatestring(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastloginlocation(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastloginchannel(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryflagurl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayaccountno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAvailablebalance();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLastlogindatestring();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLastloginlocation();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLastloginchannel();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCountryflagurl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDisplayaccountno();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string accountNo = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.getAccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} returns this
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.setAccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string AccountName = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.getAccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} returns this
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.setAccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double AvailableBalance = 3;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.getAvailablebalance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} returns this
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.setAvailablebalance = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string LastLoginDateString = 4;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.getLastlogindatestring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} returns this
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.setLastlogindatestring = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string LastLoginLocation = 5;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.getLastloginlocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} returns this
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.setLastloginlocation = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string LastLoginChannel = 6;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.getLastloginchannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} returns this
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.setLastloginchannel = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string currencyISO = 7;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} returns this
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string countryFlagUrl = 8;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.getCountryflagurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} returns this
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.setCountryflagurl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string countryCode = 9;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} returns this
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string displayAccountNo = 10;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.getDisplayaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse} returns this
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.prototype.setDisplayaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customeracctno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    merchantserviceid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 50, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage;
  return proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomeracctno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantserviceid(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomeracctno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMerchantserviceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string customerAcctNo = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.prototype.getCustomeracctno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.prototype.setCustomeracctno = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string merchantServiceId = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.prototype.getMerchantserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.prototype.setMerchantserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string countryCode = 50;
 * @return {string}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage} returns this
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customername: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage;
  return proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage} returns this
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage} returns this
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string customerName = 3;
 * @return {string}
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.prototype.getCustomername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage} returns this
 */
proto.EganowMoneyTransfer.MerchantCustomerAccountNoResponseMessage.prototype.setCustomername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ballistList: jspb.Message.toObjectList(msg.getBallistList(),
    proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse;
  return proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse;
      reader.readMessage(value,proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.deserializeBinaryFromReader);
      msg.addBallist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBallistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CustomerEganowWalletBalanceResponse balList = 1;
 * @return {!Array<!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse>}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.prototype.getBallistList = function() {
  return /** @type{!Array<!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse, 1));
};


/**
 * @param {!Array<!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse>} value
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse} returns this
*/
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.prototype.setBallistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse}
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.prototype.addBallist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.EganowMoneyTransfer.CustomerEganowWalletBalanceResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse} returns this
 */
proto.EganowMoneyTransfer.CustomerEganowWalletBalanceListResponse.prototype.clearBallistList = function() {
  return this.setBallistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    recentnooftrans: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage;
  return proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage}
 */
proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountno(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRecentnooftrans(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRecentnooftrans();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string accountNo = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.prototype.getAccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.prototype.setAccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 recentNoOfTrans = 2;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.prototype.getRecentnooftrans = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransRequestMessage.prototype.setRecentnooftrans = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    transamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    drcr: jspb.Message.getFieldWithDefault(msg, 4, ""),
    valuedatestring: jspb.Message.getFieldWithDefault(msg, 5, ""),
    transstatus: jspb.Message.getFieldWithDefault(msg, 6, ""),
    transactionreference: jspb.Message.getFieldWithDefault(msg, 7, ""),
    transchannel: jspb.Message.getFieldWithDefault(msg, 8, ""),
    currencyiso: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage;
  return proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTransamount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDrcr(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuedatestring(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransstatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionreference(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranschannel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTransamount();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getDrcr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getValuedatestring();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTransstatus();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTransactionreference();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTranschannel();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string accountNo = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.getAccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.setAccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string accountName = 2;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.getAccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.setAccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double transAmount = 3;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.getTransamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.setTransamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string dRCR = 4;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.getDrcr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.setDrcr = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string valueDateString = 5;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.getValuedatestring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.setValuedatestring = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string transStatus = 6;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.getTransstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.setTransstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string transactionReference = 7;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.getTransactionreference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.setTransactionreference = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string transChannel = 8;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.getTranschannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.setTranschannel = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string currencyISO = 9;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    translistList: jspb.Message.toObjectList(msg.getTranslistList(),
    proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage}
 */
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage;
  return proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage}
 */
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage;
      reader.readMessage(value,proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.deserializeBinaryFromReader);
      msg.addTranslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTranslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CustomerLastNTransResponseMessage transList = 1;
 * @return {!Array<!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage>}
 */
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.prototype.getTranslistList = function() {
  return /** @type{!Array<!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage, 1));
};


/**
 * @param {!Array<!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage>} value
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage} returns this
*/
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.prototype.setTranslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage}
 */
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.prototype.addTranslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.EganowMoneyTransfer.CustomerLastNTransResponseMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustomerLastNTransListResponseMessage.prototype.clearTranslistList = function() {
  return this.setTranslistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustTransRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustTransRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    topn: jspb.Message.getFieldWithDefault(msg, 3, 0),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustTransRequestMessage}
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustTransRequestMessage;
  return proto.EganowMoneyTransfer.CustTransRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustTransRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustTransRequestMessage}
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTopn(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustTransRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustTransRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTopn();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 topN = 3;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.prototype.getTopn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustTransRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.prototype.setTopn = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransRequestMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustTransResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustTransResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuedate: jspb.Message.getFieldWithDefault(msg, 1, ""),
    transamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    feeamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    totalamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    transcurrencyiso: jspb.Message.getFieldWithDefault(msg, 5, ""),
    cashinout: jspb.Message.getFieldWithDefault(msg, 6, ""),
    accountname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    transstatus: jspb.Message.getFieldWithDefault(msg, 8, ""),
    transactionnarration: jspb.Message.getFieldWithDefault(msg, 9, ""),
    senderaccountno: jspb.Message.getFieldWithDefault(msg, 11, ""),
    senderaccountname: jspb.Message.getFieldWithDefault(msg, 12, ""),
    beneficiaryaccountno: jspb.Message.getFieldWithDefault(msg, 13, ""),
    beneficiaryaccountname: jspb.Message.getFieldWithDefault(msg, 14, ""),
    senderacctprovider: jspb.Message.getFieldWithDefault(msg, 15, ""),
    beneficiaryacctprovider: jspb.Message.getFieldWithDefault(msg, 16, ""),
    senderlogourl: jspb.Message.getFieldWithDefault(msg, 20, ""),
    beneficiarylogourl: jspb.Message.getFieldWithDefault(msg, 21, ""),
    mobileorweborussd: jspb.Message.getFieldWithDefault(msg, 22, ""),
    makedatetime: jspb.Message.getFieldWithDefault(msg, 23, ""),
    journalrefno: jspb.Message.getFieldWithDefault(msg, 24, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustTransResponseMessage;
  return proto.EganowMoneyTransfer.CustTransResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustTransResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuedate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTransamount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFeeamount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalamount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranscurrencyiso(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCashinout(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountname(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransstatus(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionnarration(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderaccountno(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderaccountname(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryaccountno(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryaccountname(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderacctprovider(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryacctprovider(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderlogourl(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiarylogourl(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileorweborussd(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakedatetime(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setJournalrefno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustTransResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustTransResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuedate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransamount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getFeeamount();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTotalamount();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getTranscurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCashinout();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAccountname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTransstatus();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTransactionnarration();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSenderaccountno();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSenderaccountname();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBeneficiaryaccountno();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBeneficiaryaccountname();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getSenderacctprovider();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getBeneficiaryacctprovider();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getSenderlogourl();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getBeneficiarylogourl();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getMobileorweborussd();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getMakedatetime();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getJournalrefno();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
};


/**
 * optional string ValueDate = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getValuedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setValuedate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double transAmount = 2;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getTransamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setTransamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double feeAmount = 3;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getFeeamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setFeeamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double totalAmount = 4;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getTotalamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setTotalamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string transCurrencyIso = 5;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getTranscurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setTranscurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string cashInOut = 6;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getCashinout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setCashinout = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string accountName = 7;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getAccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setAccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string transStatus = 8;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getTransstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setTransstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string transactionNarration = 9;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getTransactionnarration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setTransactionnarration = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string senderAccountNo = 11;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getSenderaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setSenderaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string senderAccountName = 12;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getSenderaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setSenderaccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string beneficiaryAccountNo = 13;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getBeneficiaryaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setBeneficiaryaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string beneficiaryAccountName = 14;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getBeneficiaryaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setBeneficiaryaccountname = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string senderAcctProvider = 15;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getSenderacctprovider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setSenderacctprovider = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string beneficiaryAcctProvider = 16;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getBeneficiaryacctprovider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setBeneficiaryacctprovider = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string senderLogoUrl = 20;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getSenderlogourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setSenderlogourl = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string beneficiaryLogoUrl = 21;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getBeneficiarylogourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setBeneficiarylogourl = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string mobileOrWebOrUSSD = 22;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getMobileorweborussd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setMobileorweborussd = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string makeDateTime = 23;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getMakedatetime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setMakedatetime = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string journalRefNo = 24;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.getJournalrefno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransResponseMessage.prototype.setJournalrefno = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.EganowMoneyTransfer.CustTransListResponseMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustTransListResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustTransListResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustTransListResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustTransListResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    translistList: jspb.Message.toObjectList(msg.getTranslistList(),
    proto.EganowMoneyTransfer.CustTransResponseMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustTransListResponseMessage}
 */
proto.EganowMoneyTransfer.CustTransListResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustTransListResponseMessage;
  return proto.EganowMoneyTransfer.CustTransListResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustTransListResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustTransListResponseMessage}
 */
proto.EganowMoneyTransfer.CustTransListResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.EganowMoneyTransfer.CustTransResponseMessage;
      reader.readMessage(value,proto.EganowMoneyTransfer.CustTransResponseMessage.deserializeBinaryFromReader);
      msg.addTranslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustTransListResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustTransListResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustTransListResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustTransListResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTranslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.EganowMoneyTransfer.CustTransResponseMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CustTransResponseMessage transList = 1;
 * @return {!Array<!proto.EganowMoneyTransfer.CustTransResponseMessage>}
 */
proto.EganowMoneyTransfer.CustTransListResponseMessage.prototype.getTranslistList = function() {
  return /** @type{!Array<!proto.EganowMoneyTransfer.CustTransResponseMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.EganowMoneyTransfer.CustTransResponseMessage, 1));
};


/**
 * @param {!Array<!proto.EganowMoneyTransfer.CustTransResponseMessage>} value
 * @return {!proto.EganowMoneyTransfer.CustTransListResponseMessage} returns this
*/
proto.EganowMoneyTransfer.CustTransListResponseMessage.prototype.setTranslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.EganowMoneyTransfer.CustTransResponseMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.EganowMoneyTransfer.CustTransResponseMessage}
 */
proto.EganowMoneyTransfer.CustTransListResponseMessage.prototype.addTranslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.EganowMoneyTransfer.CustTransResponseMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.EganowMoneyTransfer.CustTransListResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustTransListResponseMessage.prototype.clearTranslistList = function() {
  return this.setTranslistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustStatementResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustStatementResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuedatestr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    transamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    balance: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    debitorcredit: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currencyiso: jspb.Message.getFieldWithDefault(msg, 6, ""),
    transnarration: jspb.Message.getFieldWithDefault(msg, 7, ""),
    mainorfeeortransfer: jspb.Message.getFieldWithDefault(msg, 8, ""),
    initiatedbybackofficeormobileorweborussd: jspb.Message.getFieldWithDefault(msg, 9, ""),
    personsenttoorrecivedfrom: jspb.Message.getFieldWithDefault(msg, 14, ""),
    servicesenttoorrecivedlogourl: jspb.Message.getFieldWithDefault(msg, 16, ""),
    servicesenttoorrecivedfrom: jspb.Message.getFieldWithDefault(msg, 17, ""),
    senttoorreceivedfromlable: jspb.Message.getFieldWithDefault(msg, 18, ""),
    journalrefno: jspb.Message.getFieldWithDefault(msg, 20, ""),
    makedatetime: jspb.Message.getFieldWithDefault(msg, 21, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustStatementResponseMessage;
  return proto.EganowMoneyTransfer.CustStatementResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustStatementResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValuedatestr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTransamount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBalance(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDebitorcredit(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransnarration(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMainorfeeortransfer(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitiatedbybackofficeormobileorweborussd(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonsenttoorrecivedfrom(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicesenttoorrecivedlogourl(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicesenttoorrecivedfrom(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenttoorreceivedfromlable(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setJournalrefno(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakedatetime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustStatementResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustStatementResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuedatestr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransamount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getBalance();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getDebitorcredit();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTransnarration();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMainorfeeortransfer();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getInitiatedbybackofficeormobileorweborussd();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPersonsenttoorrecivedfrom();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getServicesenttoorrecivedlogourl();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getServicesenttoorrecivedfrom();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getSenttoorreceivedfromlable();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getJournalrefno();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getMakedatetime();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
};


/**
 * optional string valueDateStr = 1;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getValuedatestr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setValuedatestr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double transAmount = 2;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getTransamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setTransamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double balance = 4;
 * @return {number}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setBalance = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string DebitOrCredit = 5;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getDebitorcredit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setDebitorcredit = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string currencyIso = 6;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string transNarration = 7;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getTransnarration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setTransnarration = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string mainOrFeeOrTransfer = 8;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getMainorfeeortransfer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setMainorfeeortransfer = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string initiatedByBackOfficeOrMobileOrWebOrUssd = 9;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getInitiatedbybackofficeormobileorweborussd = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setInitiatedbybackofficeormobileorweborussd = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string personSentToOrRecivedFrom = 14;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getPersonsenttoorrecivedfrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setPersonsenttoorrecivedfrom = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string serviceSentToOrRecivedLogoUrl = 16;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getServicesenttoorrecivedlogourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setServicesenttoorrecivedlogourl = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string serviceSentToOrRecivedFrom = 17;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getServicesenttoorrecivedfrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setServicesenttoorrecivedfrom = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string sentToOrReceivedFromLable = 18;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getSenttoorreceivedfromlable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setSenttoorreceivedfromlable = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string journalRefNo = 20;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getJournalrefno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setJournalrefno = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string makeDateTime = 21;
 * @return {string}
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.getMakedatetime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementResponseMessage.prototype.setMakedatetime = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.EganowMoneyTransfer.CustStatementListResponseMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EganowMoneyTransfer.CustStatementListResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.EganowMoneyTransfer.CustStatementListResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EganowMoneyTransfer.CustStatementListResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustStatementListResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    translistList: jspb.Message.toObjectList(msg.getTranslistList(),
    proto.EganowMoneyTransfer.CustStatementResponseMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EganowMoneyTransfer.CustStatementListResponseMessage}
 */
proto.EganowMoneyTransfer.CustStatementListResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EganowMoneyTransfer.CustStatementListResponseMessage;
  return proto.EganowMoneyTransfer.CustStatementListResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EganowMoneyTransfer.CustStatementListResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EganowMoneyTransfer.CustStatementListResponseMessage}
 */
proto.EganowMoneyTransfer.CustStatementListResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.EganowMoneyTransfer.CustStatementResponseMessage;
      reader.readMessage(value,proto.EganowMoneyTransfer.CustStatementResponseMessage.deserializeBinaryFromReader);
      msg.addTranslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EganowMoneyTransfer.CustStatementListResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EganowMoneyTransfer.CustStatementListResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EganowMoneyTransfer.CustStatementListResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EganowMoneyTransfer.CustStatementListResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTranslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.EganowMoneyTransfer.CustStatementResponseMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CustStatementResponseMessage transList = 1;
 * @return {!Array<!proto.EganowMoneyTransfer.CustStatementResponseMessage>}
 */
proto.EganowMoneyTransfer.CustStatementListResponseMessage.prototype.getTranslistList = function() {
  return /** @type{!Array<!proto.EganowMoneyTransfer.CustStatementResponseMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.EganowMoneyTransfer.CustStatementResponseMessage, 1));
};


/**
 * @param {!Array<!proto.EganowMoneyTransfer.CustStatementResponseMessage>} value
 * @return {!proto.EganowMoneyTransfer.CustStatementListResponseMessage} returns this
*/
proto.EganowMoneyTransfer.CustStatementListResponseMessage.prototype.setTranslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.EganowMoneyTransfer.CustStatementResponseMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.EganowMoneyTransfer.CustStatementResponseMessage}
 */
proto.EganowMoneyTransfer.CustStatementListResponseMessage.prototype.addTranslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.EganowMoneyTransfer.CustStatementResponseMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.EganowMoneyTransfer.CustStatementListResponseMessage} returns this
 */
proto.EganowMoneyTransfer.CustStatementListResponseMessage.prototype.clearTranslistList = function() {
  return this.setTranslistList([]);
};


goog.object.extend(exports, proto.EganowMoneyTransfer);
