// source: MerchantAccount.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.MerchantAccount.EganowModuleListRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.EganowModuleRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.EganowmoduleModelRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.MerchantServiceCategoryListResponseMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.MerchantServiceCategoryRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.MerchantServiceCategoryResponseMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.MerchantServicesListMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.MerchantServicesMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.PayPartnerMerchantCountryMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.PayPartnerMerchantEmptyMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.PayPartnerMerchantModelMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.PayPartnerMerchantRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.PayPartnerServiceRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.PayPartnerServicesListResponseMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.PaypartnerChargesRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.RegulatorsListRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.RegulatorsRequestMessage', null, global);
goog.exportSymbol('proto.MerchantAccount.SuccessMessagePayPartnerMerchant', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.PayPartnerMerchantEmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.PayPartnerMerchantEmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.PayPartnerMerchantEmptyMessage.displayName = 'proto.MerchantAccount.PayPartnerMerchantEmptyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.PayPartnerMerchantCountryMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.PayPartnerMerchantCountryMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.PayPartnerMerchantCountryMessage.displayName = 'proto.MerchantAccount.PayPartnerMerchantCountryMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.SuccessMessagePayPartnerMerchant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.SuccessMessagePayPartnerMerchant.displayName = 'proto.MerchantAccount.SuccessMessagePayPartnerMerchant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.MerchantServiceCategoryResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.MerchantServiceCategoryResponseMessage.displayName = 'proto.MerchantAccount.MerchantServiceCategoryResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.MerchantAccount.MerchantServiceCategoryListResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.displayName = 'proto.MerchantAccount.MerchantServiceCategoryListResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.MerchantServiceCategoryRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.MerchantServiceCategoryRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.MerchantServiceCategoryRequestMessage.displayName = 'proto.MerchantAccount.MerchantServiceCategoryRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.PayPartnerMerchantRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.PayPartnerMerchantRequestMessage.displayName = 'proto.MerchantAccount.PayPartnerMerchantRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.PayPartnerMerchantModelMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.PayPartnerMerchantModelMessage.displayName = 'proto.MerchantAccount.PayPartnerMerchantModelMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.displayName = 'proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.repeatedFields_, null);
};
goog.inherits(proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.displayName = 'proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.repeatedFields_, null);
};
goog.inherits(proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.displayName = 'proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.displayName = 'proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.PaypartnerChargesRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.PaypartnerChargesRequestMessage.displayName = 'proto.MerchantAccount.PaypartnerChargesRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.PayPartnerServiceRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.PayPartnerServiceRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.PayPartnerServiceRequestMessage.displayName = 'proto.MerchantAccount.PayPartnerServiceRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.displayName = 'proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.PayPartnerServicesListResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MerchantAccount.PayPartnerServicesListResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.MerchantAccount.PayPartnerServicesListResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.PayPartnerServicesListResponseMessage.displayName = 'proto.MerchantAccount.PayPartnerServicesListResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.RegulatorsRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.RegulatorsRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.RegulatorsRequestMessage.displayName = 'proto.MerchantAccount.RegulatorsRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.RegulatorsListRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MerchantAccount.RegulatorsListRequestMessage.repeatedFields_, null);
};
goog.inherits(proto.MerchantAccount.RegulatorsListRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.RegulatorsListRequestMessage.displayName = 'proto.MerchantAccount.RegulatorsListRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.EganowModuleRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.EganowModuleRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.EganowModuleRequestMessage.displayName = 'proto.MerchantAccount.EganowModuleRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.EganowmoduleModelRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.EganowmoduleModelRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.EganowmoduleModelRequestMessage.displayName = 'proto.MerchantAccount.EganowmoduleModelRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.EganowModuleListRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MerchantAccount.EganowModuleListRequestMessage.repeatedFields_, null);
};
goog.inherits(proto.MerchantAccount.EganowModuleListRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.EganowModuleListRequestMessage.displayName = 'proto.MerchantAccount.EganowModuleListRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.MerchantServicesMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MerchantAccount.MerchantServicesMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.MerchantServicesMessage.displayName = 'proto.MerchantAccount.MerchantServicesMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MerchantAccount.MerchantServicesListMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MerchantAccount.MerchantServicesListMessage.repeatedFields_, null);
};
goog.inherits(proto.MerchantAccount.MerchantServicesListMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MerchantAccount.MerchantServicesListMessage.displayName = 'proto.MerchantAccount.MerchantServicesListMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.PayPartnerMerchantEmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.PayPartnerMerchantEmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.PayPartnerMerchantEmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantEmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.PayPartnerMerchantEmptyMessage}
 */
proto.MerchantAccount.PayPartnerMerchantEmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.PayPartnerMerchantEmptyMessage;
  return proto.MerchantAccount.PayPartnerMerchantEmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.PayPartnerMerchantEmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.PayPartnerMerchantEmptyMessage}
 */
proto.MerchantAccount.PayPartnerMerchantEmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.PayPartnerMerchantEmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.PayPartnerMerchantEmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.PayPartnerMerchantEmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantEmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.PayPartnerMerchantCountryMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.PayPartnerMerchantCountryMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.PayPartnerMerchantCountryMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantCountryMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.PayPartnerMerchantCountryMessage}
 */
proto.MerchantAccount.PayPartnerMerchantCountryMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.PayPartnerMerchantCountryMessage;
  return proto.MerchantAccount.PayPartnerMerchantCountryMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.PayPartnerMerchantCountryMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.PayPartnerMerchantCountryMessage}
 */
proto.MerchantAccount.PayPartnerMerchantCountryMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.PayPartnerMerchantCountryMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.PayPartnerMerchantCountryMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.PayPartnerMerchantCountryMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantCountryMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantCountryMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantCountryMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantCountryMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string languageId = 2;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantCountryMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantCountryMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantCountryMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.SuccessMessagePayPartnerMerchant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.SuccessMessagePayPartnerMerchant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messagesuccessfulorfailed: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    registrationerrorcode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paypartnerid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.SuccessMessagePayPartnerMerchant}
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.SuccessMessagePayPartnerMerchant;
  return proto.MerchantAccount.SuccessMessagePayPartnerMerchant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.SuccessMessagePayPartnerMerchant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.SuccessMessagePayPartnerMerchant}
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagesuccessfulorfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationerrorcode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.SuccessMessagePayPartnerMerchant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.SuccessMessagePayPartnerMerchant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessagesuccessfulorfailed();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegistrationerrorcode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPaypartnerid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.MerchantAccount.SuccessMessagePayPartnerMerchant} returns this
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string messageSuccessfulOrFailed = 2;
 * @return {string}
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.getMessagesuccessfulorfailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.SuccessMessagePayPartnerMerchant} returns this
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.setMessagesuccessfulorfailed = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.SuccessMessagePayPartnerMerchant} returns this
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string registrationErrorCode = 4;
 * @return {string}
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.getRegistrationerrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.SuccessMessagePayPartnerMerchant} returns this
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.setRegistrationerrorcode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string payPartnerId = 5;
 * @return {string}
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.getPaypartnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.SuccessMessagePayPartnerMerchant} returns this
 */
proto.MerchantAccount.SuccessMessagePayPartnerMerchant.prototype.setPaypartnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.MerchantServiceCategoryResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.MerchantServiceCategoryResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicecategoryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    servicecategoryname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eganowmoduleid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    eganowmoduledesc: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.MerchantServiceCategoryResponseMessage}
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.MerchantServiceCategoryResponseMessage;
  return proto.MerchantAccount.MerchantServiceCategoryResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.MerchantServiceCategoryResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.MerchantServiceCategoryResponseMessage}
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicecategoryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicecategoryname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEganowmoduleid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEganowmoduledesc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.MerchantServiceCategoryResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.MerchantServiceCategoryResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicecategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServicecategoryname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEganowmoduleid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEganowmoduledesc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string serviceCategoryId = 1;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.prototype.getServicecategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceCategoryResponseMessage} returns this
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.prototype.setServicecategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string serviceCategoryName = 2;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.prototype.getServicecategoryname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceCategoryResponseMessage} returns this
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.prototype.setServicecategoryname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 eganowModuleId = 3;
 * @return {number}
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.prototype.getEganowmoduleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantAccount.MerchantServiceCategoryResponseMessage} returns this
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.prototype.setEganowmoduleid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string eganowModuleDesc = 4;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.prototype.getEganowmoduledesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceCategoryResponseMessage} returns this
 */
proto.MerchantAccount.MerchantServiceCategoryResponseMessage.prototype.setEganowmoduledesc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.MerchantServiceCategoryListResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicecategorylistList: jspb.Message.toObjectList(msg.getServicecategorylistList(),
    proto.MerchantAccount.MerchantServiceCategoryResponseMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.MerchantServiceCategoryListResponseMessage}
 */
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.MerchantServiceCategoryListResponseMessage;
  return proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.MerchantServiceCategoryListResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.MerchantServiceCategoryListResponseMessage}
 */
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MerchantAccount.MerchantServiceCategoryResponseMessage;
      reader.readMessage(value,proto.MerchantAccount.MerchantServiceCategoryResponseMessage.deserializeBinaryFromReader);
      msg.addServicecategorylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.MerchantServiceCategoryListResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicecategorylistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.MerchantAccount.MerchantServiceCategoryResponseMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MerchantServiceCategoryResponseMessage serviceCategoryList = 1;
 * @return {!Array<!proto.MerchantAccount.MerchantServiceCategoryResponseMessage>}
 */
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.prototype.getServicecategorylistList = function() {
  return /** @type{!Array<!proto.MerchantAccount.MerchantServiceCategoryResponseMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MerchantAccount.MerchantServiceCategoryResponseMessage, 1));
};


/**
 * @param {!Array<!proto.MerchantAccount.MerchantServiceCategoryResponseMessage>} value
 * @return {!proto.MerchantAccount.MerchantServiceCategoryListResponseMessage} returns this
*/
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.prototype.setServicecategorylistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.MerchantAccount.MerchantServiceCategoryResponseMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MerchantAccount.MerchantServiceCategoryResponseMessage}
 */
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.prototype.addServicecategorylist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.MerchantAccount.MerchantServiceCategoryResponseMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MerchantAccount.MerchantServiceCategoryListResponseMessage} returns this
 */
proto.MerchantAccount.MerchantServiceCategoryListResponseMessage.prototype.clearServicecategorylistList = function() {
  return this.setServicecategorylistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.MerchantServiceCategoryRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.MerchantServiceCategoryRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.MerchantServiceCategoryRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServiceCategoryRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicecategoryid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.MerchantServiceCategoryRequestMessage}
 */
proto.MerchantAccount.MerchantServiceCategoryRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.MerchantServiceCategoryRequestMessage;
  return proto.MerchantAccount.MerchantServiceCategoryRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.MerchantServiceCategoryRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.MerchantServiceCategoryRequestMessage}
 */
proto.MerchantAccount.MerchantServiceCategoryRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicecategoryid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.MerchantServiceCategoryRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.MerchantServiceCategoryRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.MerchantServiceCategoryRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServiceCategoryRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicecategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string serviceCategoryId = 1;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceCategoryRequestMessage.prototype.getServicecategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceCategoryRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceCategoryRequestMessage.prototype.setServicecategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.PayPartnerMerchantRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.PayPartnerMerchantRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnersymbol: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paypartnername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    regulatorid: jspb.Message.getFieldWithDefault(msg, 23, ""),
    licenseno: jspb.Message.getFieldWithDefault(msg, 24, ""),
    issuedate: jspb.Message.getFieldWithDefault(msg, 25, ""),
    expirydate: jspb.Message.getFieldWithDefault(msg, 26, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.PayPartnerMerchantRequestMessage}
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.PayPartnerMerchantRequestMessage;
  return proto.MerchantAccount.PayPartnerMerchantRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.PayPartnerMerchantRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.PayPartnerMerchantRequestMessage}
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnersymbol(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnername(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegulatorid(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseno(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuedate(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpirydate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.PayPartnerMerchantRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.PayPartnerMerchantRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnersymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaypartnername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRegulatorid();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getLicenseno();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getIssuedate();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getExpirydate();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
};


/**
 * optional string payPartnerSymbol = 1;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.getPaypartnersymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.setPaypartnersymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payPartnerName = 2;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.getPaypartnername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.setPaypartnername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string regulatorId = 23;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.getRegulatorid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.setRegulatorid = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string licenseNo = 24;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.getLicenseno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.setLicenseno = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string issueDate = 25;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.getIssuedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.setIssuedate = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string expiryDate = 26;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.getExpirydate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantRequestMessage.prototype.setExpirydate = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.PayPartnerMerchantModelMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.PayPartnerMerchantModelMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paypartnername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paypartnertypeid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    paypartnerormerchant: jspb.Message.getFieldWithDefault(msg, 5, ""),
    paypartnersymbol: jspb.Message.getFieldWithDefault(msg, 6, ""),
    internalorexternal: jspb.Message.getFieldWithDefault(msg, 7, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    countryname: jspb.Message.getFieldWithDefault(msg, 9, ""),
    paypartnerstatus: jspb.Message.getFieldWithDefault(msg, 10, ""),
    regulatorid: jspb.Message.getFieldWithDefault(msg, 11, ""),
    regulatorname: jspb.Message.getFieldWithDefault(msg, 12, ""),
    licenseno: jspb.Message.getFieldWithDefault(msg, 13, ""),
    issuedate: jspb.Message.getFieldWithDefault(msg, 14, ""),
    expirydate: jspb.Message.getFieldWithDefault(msg, 15, ""),
    makerid: jspb.Message.getFieldWithDefault(msg, 16, ""),
    makedate: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.PayPartnerMerchantModelMessage;
  return proto.MerchantAccount.PayPartnerMerchantModelMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.PayPartnerMerchantModelMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnername(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnertypeid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerormerchant(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnersymbol(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInternalorexternal(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryname(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerstatus(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegulatorid(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegulatorname(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseno(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuedate(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpirydate(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerid(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakedate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.PayPartnerMerchantModelMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.PayPartnerMerchantModelMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaypartnername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaypartnertypeid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPaypartnerormerchant();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPaypartnersymbol();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInternalorexternal();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCountryname();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPaypartnerstatus();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRegulatorid();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getRegulatorname();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getLicenseno();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getIssuedate();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getExpirydate();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getMakerid();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getMakedate();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string payPartnerId = 1;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getPaypartnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setPaypartnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payPartnerName = 3;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getPaypartnername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setPaypartnername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 payPartnerTypeId = 4;
 * @return {number}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getPaypartnertypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setPaypartnertypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string paypartnerOrMerchant = 5;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getPaypartnerormerchant = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setPaypartnerormerchant = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string payPartnerSymbol = 6;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getPaypartnersymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setPaypartnersymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string internalOrExternal = 7;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getInternalorexternal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setInternalorexternal = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string countryCode = 8;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string countryName = 9;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getCountryname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setCountryname = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string payPartnerStatus = 10;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getPaypartnerstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setPaypartnerstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string regulatorId = 11;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getRegulatorid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setRegulatorid = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string regulatorName = 12;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getRegulatorname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setRegulatorname = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string licenseNo = 13;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getLicenseno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setLicenseno = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string issueDate = 14;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getIssuedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setIssuedate = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string expiryDate = 15;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getExpirydate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setExpirydate = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string makerId = 16;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getMakerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setMakerid = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string makeDate = 17;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.getMakedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelMessage.prototype.setMakedate = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    regulatorid: jspb.Message.getFieldWithDefault(msg, 11, ""),
    licenseno: jspb.Message.getFieldWithDefault(msg, 13, ""),
    issuedate: jspb.Message.getFieldWithDefault(msg, 14, ""),
    expirydate: jspb.Message.getFieldWithDefault(msg, 15, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage}
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage;
  return proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage}
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnername(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegulatorid(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseno(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuedate(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpirydate(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRegulatorid();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLicenseno();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getIssuedate();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getExpirydate();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string payPartnerName = 2;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.getPaypartnername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.setPaypartnername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string regulatorId = 11;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.getRegulatorid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.setRegulatorid = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string licenseNo = 13;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.getLicenseno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.setLicenseno = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string issueDate = 14;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.getIssuedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.setIssuedate = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string expiryDate = 15;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.getExpirydate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.setExpirydate = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string languageId = 16;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantModelForUpdateMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.repeatedFields_ = [100];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnersymbol: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paypartnername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paypartnerservicename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    servicecategoryid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    settlementaccounttypebankormomo: jspb.Message.getFieldWithDefault(msg, 9, ""),
    settlementacctno: jspb.Message.getFieldWithDefault(msg, 10, ""),
    settlementacctname: jspb.Message.getFieldWithDefault(msg, 11, ""),
    settlementbankorwalletname: jspb.Message.getFieldWithDefault(msg, 12, ""),
    settlementbankcode: jspb.Message.getFieldWithDefault(msg, 13, ""),
    settlementbankbranchname: jspb.Message.getFieldWithDefault(msg, 14, ""),
    availableoneganowyesno: jspb.Message.getFieldWithDefault(msg, 15, ""),
    regulatorid: jspb.Message.getFieldWithDefault(msg, 23, ""),
    licenseno: jspb.Message.getFieldWithDefault(msg, 24, ""),
    issuedate: jspb.Message.getFieldWithDefault(msg, 25, ""),
    expirydate: jspb.Message.getFieldWithDefault(msg, 26, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 30, ""),
    tin: jspb.Message.getFieldWithDefault(msg, 31, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, ""),
    packagesList: jspb.Message.toObjectList(msg.getPackagesList(),
    proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage;
  return proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnersymbol(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerservicename(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicecategoryid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementaccounttypebankormomo(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementacctno(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementacctname(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementbankorwalletname(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementbankcode(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementbankbranchname(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvailableoneganowyesno(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegulatorid(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseno(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuedate(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpirydate(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setTin(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    case 100:
      var value = new proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage;
      reader.readMessage(value,proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.deserializeBinaryFromReader);
      msg.addPackages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnersymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaypartnername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaypartnerservicename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getServicecategoryid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSettlementaccounttypebankormomo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSettlementacctno();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSettlementacctname();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSettlementbankorwalletname();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSettlementbankcode();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getSettlementbankbranchname();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAvailableoneganowyesno();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getRegulatorid();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getLicenseno();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getIssuedate();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getExpirydate();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getTin();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getPackagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      100,
      f,
      proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string payPartnerSymbol = 1;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getPaypartnersymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setPaypartnersymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payPartnerName = 2;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getPaypartnername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setPaypartnername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string payPartnerServiceName = 3;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getPaypartnerservicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setPaypartnerservicename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string serviceCategoryId = 4;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getServicecategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setServicecategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string settlementAccountTypeBankOrMomo = 9;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getSettlementaccounttypebankormomo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setSettlementaccounttypebankormomo = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string settlementAcctNo = 10;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getSettlementacctno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setSettlementacctno = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string settlementAcctName = 11;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getSettlementacctname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setSettlementacctname = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string settlementBankOrWalletName = 12;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getSettlementbankorwalletname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setSettlementbankorwalletname = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string settlementBankCode = 13;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getSettlementbankcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setSettlementbankcode = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string settlementBankBranchName = 14;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getSettlementbankbranchname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setSettlementbankbranchname = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string availableOnEganowYesNo = 15;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getAvailableoneganowyesno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setAvailableoneganowyesno = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string regulatorId = 23;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getRegulatorid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setRegulatorid = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string licenseNo = 24;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getLicenseno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setLicenseno = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string issueDate = 25;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getIssuedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setIssuedate = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string expiryDate = 26;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getExpirydate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setExpirydate = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string countryCode = 30;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string tIN = 31;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getTin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setTin = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * repeated PayPartnerServicesPackagesRequestMessage packages = 100;
 * @return {!Array<!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage>}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.getPackagesList = function() {
  return /** @type{!Array<!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage, 100));
};


/**
 * @param {!Array<!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage>} value
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
*/
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.setPackagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 100, value);
};


/**
 * @param {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage}
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.addPackages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 100, opt_value, proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerMerchantWithServiceAndPackageRequestMessage.prototype.clearPackagesList = function() {
  return this.setPackagesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.repeatedFields_ = [100];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnerservicename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    servicecategoryid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    settlementaccounttypebankormomo: jspb.Message.getFieldWithDefault(msg, 9, ""),
    settlementacctno: jspb.Message.getFieldWithDefault(msg, 10, ""),
    settlementacctname: jspb.Message.getFieldWithDefault(msg, 11, ""),
    settlementbankorwalletname: jspb.Message.getFieldWithDefault(msg, 12, ""),
    settlementbankcode: jspb.Message.getFieldWithDefault(msg, 13, ""),
    settlementbankbranchname: jspb.Message.getFieldWithDefault(msg, 14, ""),
    availableoneganowyesno: jspb.Message.getFieldWithDefault(msg, 15, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 30, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 31, ""),
    packagesList: jspb.Message.toObjectList(msg.getPackagesList(),
    proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage;
  return proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerservicename(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicecategoryid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementaccounttypebankormomo(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementacctno(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementacctname(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementbankorwalletname(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementbankcode(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettlementbankbranchname(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvailableoneganowyesno(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    case 100:
      var value = new proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage;
      reader.readMessage(value,proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.deserializeBinaryFromReader);
      msg.addPackages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnerservicename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getServicecategoryid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSettlementaccounttypebankormomo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSettlementacctno();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSettlementacctname();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSettlementbankorwalletname();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSettlementbankcode();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getSettlementbankbranchname();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAvailableoneganowyesno();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getPackagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      100,
      f,
      proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string payPartnerServiceName = 3;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getPaypartnerservicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setPaypartnerservicename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string serviceCategoryId = 4;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getServicecategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setServicecategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string settlementAccountTypeBankOrMomo = 9;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getSettlementaccounttypebankormomo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setSettlementaccounttypebankormomo = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string settlementAcctNo = 10;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getSettlementacctno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setSettlementacctno = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string settlementAcctName = 11;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getSettlementacctname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setSettlementacctname = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string settlementBankOrWalletName = 12;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getSettlementbankorwalletname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setSettlementbankorwalletname = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string settlementBankCode = 13;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getSettlementbankcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setSettlementbankcode = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string settlementBankBranchName = 14;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getSettlementbankbranchname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setSettlementbankbranchname = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string availableOnEganowYesNo = 15;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getAvailableoneganowyesno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setAvailableoneganowyesno = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string countryCode = 30;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string languageId = 31;
 * @return {string}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * repeated PayPartnerServicesPackagesRequestMessage packages = 100;
 * @return {!Array<!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage>}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.getPackagesList = function() {
  return /** @type{!Array<!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage, 100));
};


/**
 * @param {!Array<!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage>} value
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
*/
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.setPackagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 100, value);
};


/**
 * @param {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage}
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.addPackages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 100, opt_value, proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage} returns this
 */
proto.MerchantAccount.MerchantServiceWithPackagesRequestMessage.prototype.clearPackagesList = function() {
  return this.setPackagesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    packagename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ispackagefeefixedyesno: jspb.Message.getFieldWithDefault(msg, 4, ""),
    packagefeeamt: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage}
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage;
  return proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage}
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackagename(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIspackagefeefixedyesno(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPackagefeeamt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPackagename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIspackagefeefixedyesno();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPackagefeeamt();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional string payPartnerServiceId = 2;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string packageName = 3;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.prototype.getPackagename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.prototype.setPackagename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string isPackageFeeFixedYesNo = 4;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.prototype.getIspackagefeefixedyesno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.prototype.setIspackagefeefixedyesno = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double packageFeeAmt = 5;
 * @return {number}
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.prototype.getPackagefeeamt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerServicesPackagesRequestMessage.prototype.setPackagefeeamt = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.PaypartnerChargesRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.PaypartnerChargesRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    drpayoutcrcollection: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lowerlimit: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    upperlimit: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    flatratetypepaypartner: jspb.Message.getFieldWithDefault(msg, 6, ""),
    flatratevaluepaypartner: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    flatratetypeeganow: jspb.Message.getFieldWithDefault(msg, 8, ""),
    flatratevalueeganow: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    lastone: jspb.Message.getFieldWithDefault(msg, 10, ""),
    chargepercentagepaidbycustomer: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    chargepercentagepaidbypaypartner: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    chargesettlementinstantordeferred: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.PaypartnerChargesRequestMessage;
  return proto.MerchantAccount.PaypartnerChargesRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.PaypartnerChargesRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDrpayoutcrcollection(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLowerlimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUpperlimit(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlatratetypepaypartner(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFlatratevaluepaypartner(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlatratetypeeganow(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFlatratevalueeganow(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastone(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setChargepercentagepaidbycustomer(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setChargepercentagepaidbypaypartner(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setChargesettlementinstantordeferred(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.PaypartnerChargesRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.PaypartnerChargesRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDrpayoutcrcollection();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLowerlimit();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getUpperlimit();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getFlatratetypepaypartner();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFlatratevaluepaypartner();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getFlatratetypeeganow();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFlatratevalueeganow();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getLastone();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getChargepercentagepaidbycustomer();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getChargepercentagepaidbypaypartner();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getChargesettlementinstantordeferred();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string dRPayoutCRCollection = 3;
 * @return {string}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.getDrpayoutcrcollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage} returns this
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.setDrpayoutcrcollection = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double lowerLimit = 4;
 * @return {number}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.getLowerlimit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage} returns this
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.setLowerlimit = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double upperLimit = 5;
 * @return {number}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.getUpperlimit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage} returns this
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.setUpperlimit = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string flatRateTypePayPartner = 6;
 * @return {string}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.getFlatratetypepaypartner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage} returns this
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.setFlatratetypepaypartner = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double flatRateValuePayPartner = 7;
 * @return {number}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.getFlatratevaluepaypartner = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage} returns this
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.setFlatratevaluepaypartner = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string flatRateTypeEganow = 8;
 * @return {string}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.getFlatratetypeeganow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage} returns this
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.setFlatratetypeeganow = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional float flatRateValueEganow = 9;
 * @return {number}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.getFlatratevalueeganow = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage} returns this
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.setFlatratevalueeganow = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string lastOne = 10;
 * @return {string}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.getLastone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage} returns this
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.setLastone = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional float chargePercentagePaidByCustomer = 11;
 * @return {number}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.getChargepercentagepaidbycustomer = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage} returns this
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.setChargepercentagepaidbycustomer = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float chargePercentagePaidByPayPartner = 12;
 * @return {number}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.getChargepercentagepaidbypaypartner = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage} returns this
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.setChargepercentagepaidbypaypartner = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional string chargeSettlementInstantOrDeferred = 13;
 * @return {string}
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.getChargesettlementinstantordeferred = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PaypartnerChargesRequestMessage} returns this
 */
proto.MerchantAccount.PaypartnerChargesRequestMessage.prototype.setChargesettlementinstantordeferred = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.PayPartnerServiceRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.PayPartnerServiceRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.PayPartnerServiceRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerServiceRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnerid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.PayPartnerServiceRequestMessage}
 */
proto.MerchantAccount.PayPartnerServiceRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.PayPartnerServiceRequestMessage;
  return proto.MerchantAccount.PayPartnerServiceRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.PayPartnerServiceRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.PayPartnerServiceRequestMessage}
 */
proto.MerchantAccount.PayPartnerServiceRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.PayPartnerServiceRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.PayPartnerServiceRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.PayPartnerServiceRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerServiceRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string payPartnerId = 1;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceRequestMessage.prototype.getPaypartnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceRequestMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceRequestMessage.prototype.setPaypartnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paypartnerservicename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paypartnerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    servicecategoryid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    internalorexternal: jspb.Message.getFieldWithDefault(msg, 5, ""),
    labelcustomeruniqueid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    labelcolumnone: jspb.Message.getFieldWithDefault(msg, 7, ""),
    labelcolumntwo: jspb.Message.getFieldWithDefault(msg, 8, ""),
    labelcolumnthree: jspb.Message.getFieldWithDefault(msg, 9, ""),
    iscolumnonerequiredyesnona: jspb.Message.getFieldWithDefault(msg, 10, ""),
    iscolumntworequiredyesnona: jspb.Message.getFieldWithDefault(msg, 11, ""),
    iscolumnthreerequiredyesnona: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage;
  return proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerservicename(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicecategoryid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setInternalorexternal(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelcustomeruniqueid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelcolumnone(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelcolumntwo(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelcolumnthree(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setIscolumnonerequiredyesnona(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setIscolumntworequiredyesnona(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setIscolumnthreerequiredyesnona(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaypartnerservicename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaypartnerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getServicecategoryid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getInternalorexternal();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLabelcustomeruniqueid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLabelcolumnone();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLabelcolumntwo();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLabelcolumnthree();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIscolumnonerequiredyesnona();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIscolumntworequiredyesnona();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getIscolumnthreerequiredyesnona();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string payPartnerServiceId = 1;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payPartnerServiceName = 2;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getPaypartnerservicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setPaypartnerservicename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string payPartnerId = 3;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getPaypartnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setPaypartnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string serviceCategoryId = 4;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getServicecategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setServicecategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string internalOrExternal = 5;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getInternalorexternal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setInternalorexternal = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string labelCustomerUniqueId = 6;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getLabelcustomeruniqueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setLabelcustomeruniqueid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string labelColumnOne = 7;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getLabelcolumnone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setLabelcolumnone = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string labelColumnTwo = 8;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getLabelcolumntwo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setLabelcolumntwo = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string labelColumnThree = 9;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getLabelcolumnthree = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setLabelcolumnthree = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string isColumnOneRequiredYesNoNa = 10;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getIscolumnonerequiredyesnona = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setIscolumnonerequiredyesnona = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string isColumnTwoRequiredYesNoNa = 11;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getIscolumntworequiredyesnona = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setIscolumntworequiredyesnona = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string isColumnThreeRequiredYesNoNa = 12;
 * @return {string}
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.getIscolumnthreerequiredyesnona = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.prototype.setIscolumnthreerequiredyesnona = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MerchantAccount.PayPartnerServicesListResponseMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.PayPartnerServicesListResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.PayPartnerServicesListResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.PayPartnerServicesListResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerServicesListResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    merchantservicelistList: jspb.Message.toObjectList(msg.getMerchantservicelistList(),
    proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.PayPartnerServicesListResponseMessage}
 */
proto.MerchantAccount.PayPartnerServicesListResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.PayPartnerServicesListResponseMessage;
  return proto.MerchantAccount.PayPartnerServicesListResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.PayPartnerServicesListResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.PayPartnerServicesListResponseMessage}
 */
proto.MerchantAccount.PayPartnerServicesListResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage;
      reader.readMessage(value,proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.deserializeBinaryFromReader);
      msg.addMerchantservicelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.PayPartnerServicesListResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.PayPartnerServicesListResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.PayPartnerServicesListResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.PayPartnerServicesListResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMerchantservicelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PayPartnerServiceForPayPartnerResponseMessage merchantServiceList = 1;
 * @return {!Array<!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage>}
 */
proto.MerchantAccount.PayPartnerServicesListResponseMessage.prototype.getMerchantservicelistList = function() {
  return /** @type{!Array<!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage, 1));
};


/**
 * @param {!Array<!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage>} value
 * @return {!proto.MerchantAccount.PayPartnerServicesListResponseMessage} returns this
*/
proto.MerchantAccount.PayPartnerServicesListResponseMessage.prototype.setMerchantservicelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage}
 */
proto.MerchantAccount.PayPartnerServicesListResponseMessage.prototype.addMerchantservicelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.MerchantAccount.PayPartnerServiceForPayPartnerResponseMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MerchantAccount.PayPartnerServicesListResponseMessage} returns this
 */
proto.MerchantAccount.PayPartnerServicesListResponseMessage.prototype.clearMerchantservicelistList = function() {
  return this.setMerchantservicelistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.RegulatorsRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.RegulatorsRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.RegulatorsRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.RegulatorsRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    regulatorid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    regulatorname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.RegulatorsRequestMessage}
 */
proto.MerchantAccount.RegulatorsRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.RegulatorsRequestMessage;
  return proto.MerchantAccount.RegulatorsRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.RegulatorsRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.RegulatorsRequestMessage}
 */
proto.MerchantAccount.RegulatorsRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegulatorid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegulatorname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.RegulatorsRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.RegulatorsRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.RegulatorsRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.RegulatorsRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegulatorid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegulatorname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string regulatorId = 1;
 * @return {string}
 */
proto.MerchantAccount.RegulatorsRequestMessage.prototype.getRegulatorid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.RegulatorsRequestMessage} returns this
 */
proto.MerchantAccount.RegulatorsRequestMessage.prototype.setRegulatorid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string regulatorName = 2;
 * @return {string}
 */
proto.MerchantAccount.RegulatorsRequestMessage.prototype.getRegulatorname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.RegulatorsRequestMessage} returns this
 */
proto.MerchantAccount.RegulatorsRequestMessage.prototype.setRegulatorname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string countryCode = 3;
 * @return {string}
 */
proto.MerchantAccount.RegulatorsRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.RegulatorsRequestMessage} returns this
 */
proto.MerchantAccount.RegulatorsRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MerchantAccount.RegulatorsListRequestMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.RegulatorsListRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.RegulatorsListRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.RegulatorsListRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.RegulatorsListRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    regulatorslistList: jspb.Message.toObjectList(msg.getRegulatorslistList(),
    proto.MerchantAccount.RegulatorsRequestMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.RegulatorsListRequestMessage}
 */
proto.MerchantAccount.RegulatorsListRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.RegulatorsListRequestMessage;
  return proto.MerchantAccount.RegulatorsListRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.RegulatorsListRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.RegulatorsListRequestMessage}
 */
proto.MerchantAccount.RegulatorsListRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MerchantAccount.RegulatorsRequestMessage;
      reader.readMessage(value,proto.MerchantAccount.RegulatorsRequestMessage.deserializeBinaryFromReader);
      msg.addRegulatorslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.RegulatorsListRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.RegulatorsListRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.RegulatorsListRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.RegulatorsListRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegulatorslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.MerchantAccount.RegulatorsRequestMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RegulatorsRequestMessage regulatorsList = 1;
 * @return {!Array<!proto.MerchantAccount.RegulatorsRequestMessage>}
 */
proto.MerchantAccount.RegulatorsListRequestMessage.prototype.getRegulatorslistList = function() {
  return /** @type{!Array<!proto.MerchantAccount.RegulatorsRequestMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MerchantAccount.RegulatorsRequestMessage, 1));
};


/**
 * @param {!Array<!proto.MerchantAccount.RegulatorsRequestMessage>} value
 * @return {!proto.MerchantAccount.RegulatorsListRequestMessage} returns this
*/
proto.MerchantAccount.RegulatorsListRequestMessage.prototype.setRegulatorslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.MerchantAccount.RegulatorsRequestMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MerchantAccount.RegulatorsRequestMessage}
 */
proto.MerchantAccount.RegulatorsListRequestMessage.prototype.addRegulatorslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.MerchantAccount.RegulatorsRequestMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MerchantAccount.RegulatorsListRequestMessage} returns this
 */
proto.MerchantAccount.RegulatorsListRequestMessage.prototype.clearRegulatorslistList = function() {
  return this.setRegulatorslistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.EganowModuleRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.EganowModuleRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.EganowModuleRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.EganowModuleRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    eganowmoduleid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.EganowModuleRequestMessage}
 */
proto.MerchantAccount.EganowModuleRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.EganowModuleRequestMessage;
  return proto.MerchantAccount.EganowModuleRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.EganowModuleRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.EganowModuleRequestMessage}
 */
proto.MerchantAccount.EganowModuleRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEganowmoduleid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.EganowModuleRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.EganowModuleRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.EganowModuleRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.EganowModuleRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEganowmoduleid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 eganowModuleId = 1;
 * @return {number}
 */
proto.MerchantAccount.EganowModuleRequestMessage.prototype.getEganowmoduleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.MerchantAccount.EganowModuleRequestMessage} returns this
 */
proto.MerchantAccount.EganowModuleRequestMessage.prototype.setEganowmoduleid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.EganowmoduleModelRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.EganowmoduleModelRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.EganowmoduleModelRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.EganowmoduleModelRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    eganowmoduleid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    eganowmoduledesc: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.EganowmoduleModelRequestMessage}
 */
proto.MerchantAccount.EganowmoduleModelRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.EganowmoduleModelRequestMessage;
  return proto.MerchantAccount.EganowmoduleModelRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.EganowmoduleModelRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.EganowmoduleModelRequestMessage}
 */
proto.MerchantAccount.EganowmoduleModelRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEganowmoduleid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEganowmoduledesc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.EganowmoduleModelRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.EganowmoduleModelRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.EganowmoduleModelRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.EganowmoduleModelRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEganowmoduleid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEganowmoduledesc();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string eganowModuleId = 1;
 * @return {string}
 */
proto.MerchantAccount.EganowmoduleModelRequestMessage.prototype.getEganowmoduleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.EganowmoduleModelRequestMessage} returns this
 */
proto.MerchantAccount.EganowmoduleModelRequestMessage.prototype.setEganowmoduleid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string eganowModuleDesc = 2;
 * @return {string}
 */
proto.MerchantAccount.EganowmoduleModelRequestMessage.prototype.getEganowmoduledesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.EganowmoduleModelRequestMessage} returns this
 */
proto.MerchantAccount.EganowmoduleModelRequestMessage.prototype.setEganowmoduledesc = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MerchantAccount.EganowModuleListRequestMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.EganowModuleListRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.EganowModuleListRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.EganowModuleListRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.EganowModuleListRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    modulelistList: jspb.Message.toObjectList(msg.getModulelistList(),
    proto.MerchantAccount.EganowmoduleModelRequestMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.EganowModuleListRequestMessage}
 */
proto.MerchantAccount.EganowModuleListRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.EganowModuleListRequestMessage;
  return proto.MerchantAccount.EganowModuleListRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.EganowModuleListRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.EganowModuleListRequestMessage}
 */
proto.MerchantAccount.EganowModuleListRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MerchantAccount.EganowmoduleModelRequestMessage;
      reader.readMessage(value,proto.MerchantAccount.EganowmoduleModelRequestMessage.deserializeBinaryFromReader);
      msg.addModulelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.EganowModuleListRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.EganowModuleListRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.EganowModuleListRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.EganowModuleListRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModulelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.MerchantAccount.EganowmoduleModelRequestMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EganowmoduleModelRequestMessage moduleList = 1;
 * @return {!Array<!proto.MerchantAccount.EganowmoduleModelRequestMessage>}
 */
proto.MerchantAccount.EganowModuleListRequestMessage.prototype.getModulelistList = function() {
  return /** @type{!Array<!proto.MerchantAccount.EganowmoduleModelRequestMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MerchantAccount.EganowmoduleModelRequestMessage, 1));
};


/**
 * @param {!Array<!proto.MerchantAccount.EganowmoduleModelRequestMessage>} value
 * @return {!proto.MerchantAccount.EganowModuleListRequestMessage} returns this
*/
proto.MerchantAccount.EganowModuleListRequestMessage.prototype.setModulelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.MerchantAccount.EganowmoduleModelRequestMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MerchantAccount.EganowmoduleModelRequestMessage}
 */
proto.MerchantAccount.EganowModuleListRequestMessage.prototype.addModulelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.MerchantAccount.EganowmoduleModelRequestMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MerchantAccount.EganowModuleListRequestMessage} returns this
 */
proto.MerchantAccount.EganowModuleListRequestMessage.prototype.clearModulelistList = function() {
  return this.setModulelistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.MerchantServicesMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.MerchantServicesMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.MerchantServicesMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServicesMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paypartnerservicename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currencyiso: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.MerchantServicesMessage}
 */
proto.MerchantAccount.MerchantServicesMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.MerchantServicesMessage;
  return proto.MerchantAccount.MerchantServicesMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.MerchantServicesMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.MerchantServicesMessage}
 */
proto.MerchantAccount.MerchantServicesMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerservicename(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.MerchantServicesMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.MerchantServicesMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.MerchantServicesMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServicesMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaypartnerservicename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string payPartnerServiceId = 1;
 * @return {string}
 */
proto.MerchantAccount.MerchantServicesMessage.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServicesMessage} returns this
 */
proto.MerchantAccount.MerchantServicesMessage.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payPartnerServiceName = 2;
 * @return {string}
 */
proto.MerchantAccount.MerchantServicesMessage.prototype.getPaypartnerservicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServicesMessage} returns this
 */
proto.MerchantAccount.MerchantServicesMessage.prototype.setPaypartnerservicename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string countryCode = 5;
 * @return {string}
 */
proto.MerchantAccount.MerchantServicesMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServicesMessage} returns this
 */
proto.MerchantAccount.MerchantServicesMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string currencyIso = 7;
 * @return {string}
 */
proto.MerchantAccount.MerchantServicesMessage.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.MerchantAccount.MerchantServicesMessage} returns this
 */
proto.MerchantAccount.MerchantServicesMessage.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MerchantAccount.MerchantServicesListMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MerchantAccount.MerchantServicesListMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MerchantAccount.MerchantServicesListMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MerchantAccount.MerchantServicesListMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServicesListMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicelistList: jspb.Message.toObjectList(msg.getServicelistList(),
    proto.MerchantAccount.MerchantServicesMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MerchantAccount.MerchantServicesListMessage}
 */
proto.MerchantAccount.MerchantServicesListMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MerchantAccount.MerchantServicesListMessage;
  return proto.MerchantAccount.MerchantServicesListMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MerchantAccount.MerchantServicesListMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MerchantAccount.MerchantServicesListMessage}
 */
proto.MerchantAccount.MerchantServicesListMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.MerchantAccount.MerchantServicesMessage;
      reader.readMessage(value,proto.MerchantAccount.MerchantServicesMessage.deserializeBinaryFromReader);
      msg.addServicelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MerchantAccount.MerchantServicesListMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MerchantAccount.MerchantServicesListMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MerchantAccount.MerchantServicesListMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MerchantAccount.MerchantServicesListMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.MerchantAccount.MerchantServicesMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MerchantServicesMessage serviceList = 1;
 * @return {!Array<!proto.MerchantAccount.MerchantServicesMessage>}
 */
proto.MerchantAccount.MerchantServicesListMessage.prototype.getServicelistList = function() {
  return /** @type{!Array<!proto.MerchantAccount.MerchantServicesMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.MerchantAccount.MerchantServicesMessage, 1));
};


/**
 * @param {!Array<!proto.MerchantAccount.MerchantServicesMessage>} value
 * @return {!proto.MerchantAccount.MerchantServicesListMessage} returns this
*/
proto.MerchantAccount.MerchantServicesListMessage.prototype.setServicelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.MerchantAccount.MerchantServicesMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.MerchantAccount.MerchantServicesMessage}
 */
proto.MerchantAccount.MerchantServicesListMessage.prototype.addServicelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.MerchantAccount.MerchantServicesMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.MerchantAccount.MerchantServicesListMessage} returns this
 */
proto.MerchantAccount.MerchantServicesListMessage.prototype.clearServicelistList = function() {
  return this.setServicelistList([]);
};


goog.object.extend(exports, proto.MerchantAccount);
