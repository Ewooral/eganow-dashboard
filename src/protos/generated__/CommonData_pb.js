// source: CommonData.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.Commondata.CountryListResponseMessage', null, global);
goog.exportSymbol('proto.Commondata.CountryRequestMessage', null, global);
goog.exportSymbol('proto.Commondata.CountryResponseMessage', null, global);
goog.exportSymbol('proto.Commondata.CurrenExchRateRequestMessage', null, global);
goog.exportSymbol('proto.Commondata.CurrenciesListRequestMessage', null, global);
goog.exportSymbol('proto.Commondata.CurrenciesRequestMessage', null, global);
goog.exportSymbol('proto.Commondata.CustProfilePicInfo', null, global);
goog.exportSymbol('proto.Commondata.CustomerPasswordResetInAppRequestMessage', null, global);
goog.exportSymbol('proto.Commondata.CustomerProfileInfoResponseMessage', null, global);
goog.exportSymbol('proto.Commondata.DeleteAccountMessage', null, global);
goog.exportSymbol('proto.Commondata.EmptyCommonDataMessage', null, global);
goog.exportSymbol('proto.Commondata.IdCardDataMessage', null, global);
goog.exportSymbol('proto.Commondata.ImageRepoCred', null, global);
goog.exportSymbol('proto.Commondata.LanguageRequestMessage', null, global);
goog.exportSymbol('proto.Commondata.OTPTransRequestMessage', null, global);
goog.exportSymbol('proto.Commondata.OtherFinServiceCategoryListResponseMessage', null, global);
goog.exportSymbol('proto.Commondata.OtherFinServiceCategoryResponseMessage', null, global);
goog.exportSymbol('proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage', null, global);
goog.exportSymbol('proto.Commondata.PaymentAcctTypesAndServicesMessage', null, global);
goog.exportSymbol('proto.Commondata.PaymentAcctTypesListResponseMessage', null, global);
goog.exportSymbol('proto.Commondata.PaymentAcctTypesMessage', null, global);
goog.exportSymbol('proto.Commondata.SendingAmountRequestMessage', null, global);
goog.exportSymbol('proto.Commondata.SuccessCommonMessage', null, global);
goog.exportSymbol('proto.Commondata.TransLimitResponseMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.EmptyCommonDataMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.EmptyCommonDataMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.EmptyCommonDataMessage.displayName = 'proto.Commondata.EmptyCommonDataMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.LanguageRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.LanguageRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.LanguageRequestMessage.displayName = 'proto.Commondata.LanguageRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.SuccessCommonMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.SuccessCommonMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.SuccessCommonMessage.displayName = 'proto.Commondata.SuccessCommonMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.CountryRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.CountryRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.CountryRequestMessage.displayName = 'proto.Commondata.CountryRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.SendingAmountRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.SendingAmountRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.SendingAmountRequestMessage.displayName = 'proto.Commondata.SendingAmountRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.CountryResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.CountryResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.CountryResponseMessage.displayName = 'proto.Commondata.CountryResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.CountryListResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Commondata.CountryListResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.Commondata.CountryListResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.CountryListResponseMessage.displayName = 'proto.Commondata.CountryListResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.PaymentAcctTypesMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.PaymentAcctTypesMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.PaymentAcctTypesMessage.displayName = 'proto.Commondata.PaymentAcctTypesMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.PaymentAcctTypesListResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Commondata.PaymentAcctTypesListResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.Commondata.PaymentAcctTypesListResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.PaymentAcctTypesListResponseMessage.displayName = 'proto.Commondata.PaymentAcctTypesListResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.PaymentAcctTypesAndServicesMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.PaymentAcctTypesAndServicesMessage.displayName = 'proto.Commondata.PaymentAcctTypesAndServicesMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.displayName = 'proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.OtherFinServiceCategoryResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.OtherFinServiceCategoryResponseMessage.displayName = 'proto.Commondata.OtherFinServiceCategoryResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.OtherFinServiceCategoryListResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Commondata.OtherFinServiceCategoryListResponseMessage.repeatedFields_, null);
};
goog.inherits(proto.Commondata.OtherFinServiceCategoryListResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.OtherFinServiceCategoryListResponseMessage.displayName = 'proto.Commondata.OtherFinServiceCategoryListResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.CurrenciesRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.CurrenciesRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.CurrenciesRequestMessage.displayName = 'proto.Commondata.CurrenciesRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.CurrenciesListRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Commondata.CurrenciesListRequestMessage.repeatedFields_, null);
};
goog.inherits(proto.Commondata.CurrenciesListRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.CurrenciesListRequestMessage.displayName = 'proto.Commondata.CurrenciesListRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.CurrenExchRateRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.CurrenExchRateRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.CurrenExchRateRequestMessage.displayName = 'proto.Commondata.CurrenExchRateRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.OTPTransRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.OTPTransRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.OTPTransRequestMessage.displayName = 'proto.Commondata.OTPTransRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.CustomerPasswordResetInAppRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.CustomerPasswordResetInAppRequestMessage.displayName = 'proto.Commondata.CustomerPasswordResetInAppRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.DeleteAccountMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.DeleteAccountMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.DeleteAccountMessage.displayName = 'proto.Commondata.DeleteAccountMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.ImageRepoCred = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.ImageRepoCred, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.ImageRepoCred.displayName = 'proto.Commondata.ImageRepoCred';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.CustomerProfileInfoResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.CustomerProfileInfoResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.CustomerProfileInfoResponseMessage.displayName = 'proto.Commondata.CustomerProfileInfoResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.CustProfilePicInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.CustProfilePicInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.CustProfilePicInfo.displayName = 'proto.Commondata.CustProfilePicInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.TransLimitResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.TransLimitResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.TransLimitResponseMessage.displayName = 'proto.Commondata.TransLimitResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Commondata.IdCardDataMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Commondata.IdCardDataMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Commondata.IdCardDataMessage.displayName = 'proto.Commondata.IdCardDataMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.EmptyCommonDataMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.EmptyCommonDataMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.EmptyCommonDataMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.EmptyCommonDataMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.EmptyCommonDataMessage}
 */
proto.Commondata.EmptyCommonDataMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.EmptyCommonDataMessage;
  return proto.Commondata.EmptyCommonDataMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.EmptyCommonDataMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.EmptyCommonDataMessage}
 */
proto.Commondata.EmptyCommonDataMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.EmptyCommonDataMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.EmptyCommonDataMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.EmptyCommonDataMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.EmptyCommonDataMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.LanguageRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.LanguageRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.LanguageRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.LanguageRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.LanguageRequestMessage}
 */
proto.Commondata.LanguageRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.LanguageRequestMessage;
  return proto.Commondata.LanguageRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.LanguageRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.LanguageRequestMessage}
 */
proto.Commondata.LanguageRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.LanguageRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.LanguageRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.LanguageRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.LanguageRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Commondata.LanguageRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.LanguageRequestMessage} returns this
 */
proto.Commondata.LanguageRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.SuccessCommonMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.SuccessCommonMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.SuccessCommonMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.SuccessCommonMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messagesuccessfulorfailed: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    registrationerrorcode: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.SuccessCommonMessage}
 */
proto.Commondata.SuccessCommonMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.SuccessCommonMessage;
  return proto.Commondata.SuccessCommonMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.SuccessCommonMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.SuccessCommonMessage}
 */
proto.Commondata.SuccessCommonMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagesuccessfulorfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationerrorcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.SuccessCommonMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.SuccessCommonMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.SuccessCommonMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.SuccessCommonMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessagesuccessfulorfailed();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegistrationerrorcode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.Commondata.SuccessCommonMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Commondata.SuccessCommonMessage} returns this
 */
proto.Commondata.SuccessCommonMessage.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string messageSuccessfulOrFailed = 2;
 * @return {string}
 */
proto.Commondata.SuccessCommonMessage.prototype.getMessagesuccessfulorfailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.SuccessCommonMessage} returns this
 */
proto.Commondata.SuccessCommonMessage.prototype.setMessagesuccessfulorfailed = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.Commondata.SuccessCommonMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.SuccessCommonMessage} returns this
 */
proto.Commondata.SuccessCommonMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string registrationErrorCode = 4;
 * @return {string}
 */
proto.Commondata.SuccessCommonMessage.prototype.getRegistrationerrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.SuccessCommonMessage} returns this
 */
proto.Commondata.SuccessCommonMessage.prototype.setRegistrationerrorcode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.CountryRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.CountryRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.CountryRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CountryRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.CountryRequestMessage}
 */
proto.Commondata.CountryRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.CountryRequestMessage;
  return proto.Commondata.CountryRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.CountryRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.CountryRequestMessage}
 */
proto.Commondata.CountryRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.CountryRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.CountryRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.CountryRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CountryRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.Commondata.CountryRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CountryRequestMessage} returns this
 */
proto.Commondata.CountryRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Commondata.CountryRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CountryRequestMessage} returns this
 */
proto.Commondata.CountryRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.SendingAmountRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.SendingAmountRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.SendingAmountRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.SendingAmountRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    beneficiarycountrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.SendingAmountRequestMessage}
 */
proto.Commondata.SendingAmountRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.SendingAmountRequestMessage;
  return proto.Commondata.SendingAmountRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.SendingAmountRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.SendingAmountRequestMessage}
 */
proto.Commondata.SendingAmountRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiarycountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.SendingAmountRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.SendingAmountRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.SendingAmountRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.SendingAmountRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeneficiarycountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string beneficiaryCountryCode = 1;
 * @return {string}
 */
proto.Commondata.SendingAmountRequestMessage.prototype.getBeneficiarycountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.SendingAmountRequestMessage} returns this
 */
proto.Commondata.SendingAmountRequestMessage.prototype.setBeneficiarycountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Commondata.SendingAmountRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.SendingAmountRequestMessage} returns this
 */
proto.Commondata.SendingAmountRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.CountryResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.CountryResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.CountryResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CountryResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countryname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currencyiso: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countryflagurl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mobilenominlen: jspb.Message.getFieldWithDefault(msg, 5, 0),
    mobilenomaxlen: jspb.Message.getFieldWithDefault(msg, 6, 0),
    countrydialcode: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.CountryResponseMessage}
 */
proto.Commondata.CountryResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.CountryResponseMessage;
  return proto.Commondata.CountryResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.CountryResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.CountryResponseMessage}
 */
proto.Commondata.CountryResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryflagurl(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMobilenominlen(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMobilenomaxlen(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrydialcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.CountryResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.CountryResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.CountryResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CountryResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountryname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountryflagurl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMobilenominlen();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getMobilenomaxlen();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCountrydialcode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.Commondata.CountryResponseMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CountryResponseMessage} returns this
 */
proto.Commondata.CountryResponseMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string countryName = 2;
 * @return {string}
 */
proto.Commondata.CountryResponseMessage.prototype.getCountryname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CountryResponseMessage} returns this
 */
proto.Commondata.CountryResponseMessage.prototype.setCountryname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string currencyIso = 3;
 * @return {string}
 */
proto.Commondata.CountryResponseMessage.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CountryResponseMessage} returns this
 */
proto.Commondata.CountryResponseMessage.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string countryFlagUrl = 4;
 * @return {string}
 */
proto.Commondata.CountryResponseMessage.prototype.getCountryflagurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CountryResponseMessage} returns this
 */
proto.Commondata.CountryResponseMessage.prototype.setCountryflagurl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 mobileNoMinLen = 5;
 * @return {number}
 */
proto.Commondata.CountryResponseMessage.prototype.getMobilenominlen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.CountryResponseMessage} returns this
 */
proto.Commondata.CountryResponseMessage.prototype.setMobilenominlen = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 mobileNoMaxLen = 6;
 * @return {number}
 */
proto.Commondata.CountryResponseMessage.prototype.getMobilenomaxlen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.CountryResponseMessage} returns this
 */
proto.Commondata.CountryResponseMessage.prototype.setMobilenomaxlen = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string countryDialCode = 7;
 * @return {string}
 */
proto.Commondata.CountryResponseMessage.prototype.getCountrydialcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CountryResponseMessage} returns this
 */
proto.Commondata.CountryResponseMessage.prototype.setCountrydialcode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Commondata.CountryListResponseMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.CountryListResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.CountryListResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.CountryListResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CountryListResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrylistList: jspb.Message.toObjectList(msg.getCountrylistList(),
    proto.Commondata.CountryResponseMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.CountryListResponseMessage}
 */
proto.Commondata.CountryListResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.CountryListResponseMessage;
  return proto.Commondata.CountryListResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.CountryListResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.CountryListResponseMessage}
 */
proto.Commondata.CountryListResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Commondata.CountryResponseMessage;
      reader.readMessage(value,proto.Commondata.CountryResponseMessage.deserializeBinaryFromReader);
      msg.addCountrylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.CountryListResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.CountryListResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.CountryListResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CountryListResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrylistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Commondata.CountryResponseMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CountryResponseMessage countryList = 1;
 * @return {!Array<!proto.Commondata.CountryResponseMessage>}
 */
proto.Commondata.CountryListResponseMessage.prototype.getCountrylistList = function() {
  return /** @type{!Array<!proto.Commondata.CountryResponseMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Commondata.CountryResponseMessage, 1));
};


/**
 * @param {!Array<!proto.Commondata.CountryResponseMessage>} value
 * @return {!proto.Commondata.CountryListResponseMessage} returns this
*/
proto.Commondata.CountryListResponseMessage.prototype.setCountrylistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Commondata.CountryResponseMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Commondata.CountryResponseMessage}
 */
proto.Commondata.CountryListResponseMessage.prototype.addCountrylist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Commondata.CountryResponseMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Commondata.CountryListResponseMessage} returns this
 */
proto.Commondata.CountryListResponseMessage.prototype.clearCountrylistList = function() {
  return this.setCountrylistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.PaymentAcctTypesMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.PaymentAcctTypesMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.PaymentAcctTypesMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnertypeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paypartnergroupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    appname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    countryname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    paypartnergroupurl: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.PaymentAcctTypesMessage}
 */
proto.Commondata.PaymentAcctTypesMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.PaymentAcctTypesMessage;
  return proto.Commondata.PaymentAcctTypesMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.PaymentAcctTypesMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.PaymentAcctTypesMessage}
 */
proto.Commondata.PaymentAcctTypesMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnertypeid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnergroupid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryname(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnergroupurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.PaymentAcctTypesMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.PaymentAcctTypesMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.PaymentAcctTypesMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnertypeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPaypartnergroupid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAppname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountryname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPaypartnergroupurl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int32 payPartnerTypeId = 1;
 * @return {number}
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.getPaypartnertypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.PaymentAcctTypesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.setPaypartnertypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 payPartnerGroupId = 2;
 * @return {number}
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.getPaypartnergroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.PaymentAcctTypesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.setPaypartnergroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string appName = 3;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.getAppname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.setAppname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string countryCode = 6;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string countryName = 7;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.getCountryname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.setCountryname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string payPartnerGroupUrl = 10;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.getPaypartnergroupurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesMessage.prototype.setPaypartnergroupurl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Commondata.PaymentAcctTypesListResponseMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.PaymentAcctTypesListResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.PaymentAcctTypesListResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.PaymentAcctTypesListResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.PaymentAcctTypesListResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymenttypelistList: jspb.Message.toObjectList(msg.getPaymenttypelistList(),
    proto.Commondata.PaymentAcctTypesMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.PaymentAcctTypesListResponseMessage}
 */
proto.Commondata.PaymentAcctTypesListResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.PaymentAcctTypesListResponseMessage;
  return proto.Commondata.PaymentAcctTypesListResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.PaymentAcctTypesListResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.PaymentAcctTypesListResponseMessage}
 */
proto.Commondata.PaymentAcctTypesListResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Commondata.PaymentAcctTypesMessage;
      reader.readMessage(value,proto.Commondata.PaymentAcctTypesMessage.deserializeBinaryFromReader);
      msg.addPaymenttypelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.PaymentAcctTypesListResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.PaymentAcctTypesListResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.PaymentAcctTypesListResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.PaymentAcctTypesListResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymenttypelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Commondata.PaymentAcctTypesMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PaymentAcctTypesMessage paymentTypeList = 1;
 * @return {!Array<!proto.Commondata.PaymentAcctTypesMessage>}
 */
proto.Commondata.PaymentAcctTypesListResponseMessage.prototype.getPaymenttypelistList = function() {
  return /** @type{!Array<!proto.Commondata.PaymentAcctTypesMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Commondata.PaymentAcctTypesMessage, 1));
};


/**
 * @param {!Array<!proto.Commondata.PaymentAcctTypesMessage>} value
 * @return {!proto.Commondata.PaymentAcctTypesListResponseMessage} returns this
*/
proto.Commondata.PaymentAcctTypesListResponseMessage.prototype.setPaymenttypelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Commondata.PaymentAcctTypesMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Commondata.PaymentAcctTypesMessage}
 */
proto.Commondata.PaymentAcctTypesListResponseMessage.prototype.addPaymenttypelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Commondata.PaymentAcctTypesMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Commondata.PaymentAcctTypesListResponseMessage} returns this
 */
proto.Commondata.PaymentAcctTypesListResponseMessage.prototype.clearPaymenttypelistList = function() {
  return this.setPaymenttypelistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.PaymentAcctTypesAndServicesMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.PaymentAcctTypesAndServicesMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paypartnertypeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paypartnertypedesc: jspb.Message.getFieldWithDefault(msg, 2, ""),
    appname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paypartnerservicename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    countryname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    paypartnergroupid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    partnergatewaycode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    logourl: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.PaymentAcctTypesAndServicesMessage;
  return proto.Commondata.PaymentAcctTypesAndServicesMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.PaymentAcctTypesAndServicesMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnertypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnertypedesc(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerservicename(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryname(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnergroupid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnergatewaycode(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogourl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.PaymentAcctTypesAndServicesMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.PaymentAcctTypesAndServicesMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaypartnertypeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPaypartnertypedesc();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAppname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPaypartnerservicename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountryname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPaypartnergroupid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getPartnergatewaycode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLogourl();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional int32 payPartnerTypeId = 1;
 * @return {number}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.getPaypartnertypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.setPaypartnertypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string payPartnerTypeDesc = 2;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.getPaypartnertypedesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.setPaypartnertypedesc = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string appName = 3;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.getAppname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.setAppname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string PayPartnerServiceId = 4;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string payPartnerServiceName = 5;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.getPaypartnerservicename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.setPaypartnerservicename = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string countryCode = 6;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string countryName = 7;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.getCountryname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.setCountryname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 payPartnerGroupId = 8;
 * @return {number}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.getPaypartnergroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.setPaypartnergroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string partnerGatewayCode = 9;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.getPartnergatewaycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.setPartnergatewaycode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string logoUrl = 20;
 * @return {string}
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.getLogourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesMessage.prototype.setLogourl = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymenttypeslistList: jspb.Message.toObjectList(msg.getPaymenttypeslistList(),
    proto.Commondata.PaymentAcctTypesMessage.toObject, includeInstance),
    paymenttypesandsvclistList: jspb.Message.toObjectList(msg.getPaymenttypesandsvclistList(),
    proto.Commondata.PaymentAcctTypesAndServicesMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage}
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage;
  return proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage}
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Commondata.PaymentAcctTypesMessage;
      reader.readMessage(value,proto.Commondata.PaymentAcctTypesMessage.deserializeBinaryFromReader);
      msg.addPaymenttypeslist(value);
      break;
    case 2:
      var value = new proto.Commondata.PaymentAcctTypesAndServicesMessage;
      reader.readMessage(value,proto.Commondata.PaymentAcctTypesAndServicesMessage.deserializeBinaryFromReader);
      msg.addPaymenttypesandsvclist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymenttypeslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Commondata.PaymentAcctTypesMessage.serializeBinaryToWriter
    );
  }
  f = message.getPaymenttypesandsvclistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Commondata.PaymentAcctTypesAndServicesMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PaymentAcctTypesMessage paymentTypesList = 1;
 * @return {!Array<!proto.Commondata.PaymentAcctTypesMessage>}
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.prototype.getPaymenttypeslistList = function() {
  return /** @type{!Array<!proto.Commondata.PaymentAcctTypesMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Commondata.PaymentAcctTypesMessage, 1));
};


/**
 * @param {!Array<!proto.Commondata.PaymentAcctTypesMessage>} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage} returns this
*/
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.prototype.setPaymenttypeslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Commondata.PaymentAcctTypesMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Commondata.PaymentAcctTypesMessage}
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.prototype.addPaymenttypeslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Commondata.PaymentAcctTypesMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.prototype.clearPaymenttypeslistList = function() {
  return this.setPaymenttypeslistList([]);
};


/**
 * repeated PaymentAcctTypesAndServicesMessage paymentTypesAndSvcList = 2;
 * @return {!Array<!proto.Commondata.PaymentAcctTypesAndServicesMessage>}
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.prototype.getPaymenttypesandsvclistList = function() {
  return /** @type{!Array<!proto.Commondata.PaymentAcctTypesAndServicesMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Commondata.PaymentAcctTypesAndServicesMessage, 2));
};


/**
 * @param {!Array<!proto.Commondata.PaymentAcctTypesAndServicesMessage>} value
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage} returns this
*/
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.prototype.setPaymenttypesandsvclistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Commondata.PaymentAcctTypesAndServicesMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesMessage}
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.prototype.addPaymenttypesandsvclist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Commondata.PaymentAcctTypesAndServicesMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage} returns this
 */
proto.Commondata.PaymentAcctTypesAndServicesListResponseMessage.prototype.clearPaymenttypesandsvclistList = function() {
  return this.setPaymenttypesandsvclistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.OtherFinServiceCategoryResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.OtherFinServiceCategoryResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicecategoryid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    servicecategoryname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eganowmoduleid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    eganowmoduledesc: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.OtherFinServiceCategoryResponseMessage}
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.OtherFinServiceCategoryResponseMessage;
  return proto.Commondata.OtherFinServiceCategoryResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.OtherFinServiceCategoryResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.OtherFinServiceCategoryResponseMessage}
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicecategoryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServicecategoryname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEganowmoduleid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEganowmoduledesc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.OtherFinServiceCategoryResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.OtherFinServiceCategoryResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicecategoryid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServicecategoryname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEganowmoduleid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEganowmoduledesc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string serviceCategoryId = 1;
 * @return {string}
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.prototype.getServicecategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.OtherFinServiceCategoryResponseMessage} returns this
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.prototype.setServicecategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string serviceCategoryName = 2;
 * @return {string}
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.prototype.getServicecategoryname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.OtherFinServiceCategoryResponseMessage} returns this
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.prototype.setServicecategoryname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 eganowModuleId = 3;
 * @return {number}
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.prototype.getEganowmoduleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.OtherFinServiceCategoryResponseMessage} returns this
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.prototype.setEganowmoduleid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string eganowModuleDesc = 4;
 * @return {string}
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.prototype.getEganowmoduledesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.OtherFinServiceCategoryResponseMessage} returns this
 */
proto.Commondata.OtherFinServiceCategoryResponseMessage.prototype.setEganowmoduledesc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Commondata.OtherFinServiceCategoryListResponseMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.OtherFinServiceCategoryListResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.OtherFinServiceCategoryListResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.OtherFinServiceCategoryListResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.OtherFinServiceCategoryListResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicecategorylistList: jspb.Message.toObjectList(msg.getServicecategorylistList(),
    proto.Commondata.OtherFinServiceCategoryResponseMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.OtherFinServiceCategoryListResponseMessage}
 */
proto.Commondata.OtherFinServiceCategoryListResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.OtherFinServiceCategoryListResponseMessage;
  return proto.Commondata.OtherFinServiceCategoryListResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.OtherFinServiceCategoryListResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.OtherFinServiceCategoryListResponseMessage}
 */
proto.Commondata.OtherFinServiceCategoryListResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Commondata.OtherFinServiceCategoryResponseMessage;
      reader.readMessage(value,proto.Commondata.OtherFinServiceCategoryResponseMessage.deserializeBinaryFromReader);
      msg.addServicecategorylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.OtherFinServiceCategoryListResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.OtherFinServiceCategoryListResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.OtherFinServiceCategoryListResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.OtherFinServiceCategoryListResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServicecategorylistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Commondata.OtherFinServiceCategoryResponseMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OtherFinServiceCategoryResponseMessage serviceCategoryList = 1;
 * @return {!Array<!proto.Commondata.OtherFinServiceCategoryResponseMessage>}
 */
proto.Commondata.OtherFinServiceCategoryListResponseMessage.prototype.getServicecategorylistList = function() {
  return /** @type{!Array<!proto.Commondata.OtherFinServiceCategoryResponseMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Commondata.OtherFinServiceCategoryResponseMessage, 1));
};


/**
 * @param {!Array<!proto.Commondata.OtherFinServiceCategoryResponseMessage>} value
 * @return {!proto.Commondata.OtherFinServiceCategoryListResponseMessage} returns this
*/
proto.Commondata.OtherFinServiceCategoryListResponseMessage.prototype.setServicecategorylistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Commondata.OtherFinServiceCategoryResponseMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Commondata.OtherFinServiceCategoryResponseMessage}
 */
proto.Commondata.OtherFinServiceCategoryListResponseMessage.prototype.addServicecategorylist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Commondata.OtherFinServiceCategoryResponseMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Commondata.OtherFinServiceCategoryListResponseMessage} returns this
 */
proto.Commondata.OtherFinServiceCategoryListResponseMessage.prototype.clearServicecategorylistList = function() {
  return this.setServicecategorylistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.CurrenciesRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.CurrenciesRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.CurrenciesRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CurrenciesRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencyiso: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 51, ""),
    countryflagurl: jspb.Message.getFieldWithDefault(msg, 52, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.CurrenciesRequestMessage}
 */
proto.Commondata.CurrenciesRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.CurrenciesRequestMessage;
  return proto.Commondata.CurrenciesRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.CurrenciesRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.CurrenciesRequestMessage}
 */
proto.Commondata.CurrenciesRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryflagurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.CurrenciesRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.CurrenciesRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.CurrenciesRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CurrenciesRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getCountryflagurl();
  if (f.length > 0) {
    writer.writeString(
      52,
      f
    );
  }
};


/**
 * optional string currencyIso = 1;
 * @return {string}
 */
proto.Commondata.CurrenciesRequestMessage.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CurrenciesRequestMessage} returns this
 */
proto.Commondata.CurrenciesRequestMessage.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string countryCode = 51;
 * @return {string}
 */
proto.Commondata.CurrenciesRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CurrenciesRequestMessage} returns this
 */
proto.Commondata.CurrenciesRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional string countryFlagUrl = 52;
 * @return {string}
 */
proto.Commondata.CurrenciesRequestMessage.prototype.getCountryflagurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CurrenciesRequestMessage} returns this
 */
proto.Commondata.CurrenciesRequestMessage.prototype.setCountryflagurl = function(value) {
  return jspb.Message.setProto3StringField(this, 52, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Commondata.CurrenciesListRequestMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.CurrenciesListRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.CurrenciesListRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.CurrenciesListRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CurrenciesListRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencylistList: jspb.Message.toObjectList(msg.getCurrencylistList(),
    proto.Commondata.CurrenciesRequestMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.CurrenciesListRequestMessage}
 */
proto.Commondata.CurrenciesListRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.CurrenciesListRequestMessage;
  return proto.Commondata.CurrenciesListRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.CurrenciesListRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.CurrenciesListRequestMessage}
 */
proto.Commondata.CurrenciesListRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Commondata.CurrenciesRequestMessage;
      reader.readMessage(value,proto.Commondata.CurrenciesRequestMessage.deserializeBinaryFromReader);
      msg.addCurrencylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.CurrenciesListRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.CurrenciesListRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.CurrenciesListRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CurrenciesListRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencylistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Commondata.CurrenciesRequestMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CurrenciesRequestMessage currencyList = 1;
 * @return {!Array<!proto.Commondata.CurrenciesRequestMessage>}
 */
proto.Commondata.CurrenciesListRequestMessage.prototype.getCurrencylistList = function() {
  return /** @type{!Array<!proto.Commondata.CurrenciesRequestMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Commondata.CurrenciesRequestMessage, 1));
};


/**
 * @param {!Array<!proto.Commondata.CurrenciesRequestMessage>} value
 * @return {!proto.Commondata.CurrenciesListRequestMessage} returns this
*/
proto.Commondata.CurrenciesListRequestMessage.prototype.setCurrencylistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Commondata.CurrenciesRequestMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Commondata.CurrenciesRequestMessage}
 */
proto.Commondata.CurrenciesListRequestMessage.prototype.addCurrencylist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Commondata.CurrenciesRequestMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Commondata.CurrenciesListRequestMessage} returns this
 */
proto.Commondata.CurrenciesListRequestMessage.prototype.clearCurrencylistList = function() {
  return this.setCurrencylistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.CurrenExchRateRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.CurrenExchRateRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CurrenExchRateRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    sendercurrencyiso: jspb.Message.getFieldWithDefault(msg, 2, ""),
    beneficiarycurrencyiso: jspb.Message.getFieldWithDefault(msg, 3, ""),
    exchangerate: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    message: jspb.Message.getFieldWithDefault(msg, 6, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.CurrenExchRateRequestMessage}
 */
proto.Commondata.CurrenExchRateRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.CurrenExchRateRequestMessage;
  return proto.Commondata.CurrenExchRateRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.CurrenExchRateRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.CurrenExchRateRequestMessage}
 */
proto.Commondata.CurrenExchRateRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSendercurrencyiso(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiarycurrencyiso(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExchangerate(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.CurrenExchRateRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.CurrenExchRateRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CurrenExchRateRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSendercurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBeneficiarycurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExchangerate();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string senderCurrencyIso = 2;
 * @return {string}
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.getSendercurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CurrenExchRateRequestMessage} returns this
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.setSendercurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string beneficiaryCurrencyIso = 3;
 * @return {string}
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.getBeneficiarycurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CurrenExchRateRequestMessage} returns this
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.setBeneficiarycurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double exchangeRate = 4;
 * @return {number}
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.getExchangerate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.CurrenExchRateRequestMessage} returns this
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.setExchangerate = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional bool isSuccess = 5;
 * @return {boolean}
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Commondata.CurrenExchRateRequestMessage} returns this
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string message = 6;
 * @return {string}
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CurrenExchRateRequestMessage} returns this
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CurrenExchRateRequestMessage} returns this
 */
proto.Commondata.CurrenExchRateRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.OTPTransRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.OTPTransRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.OTPTransRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.OTPTransRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobilenoorbankormerchantaccountno: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paypartnerserviceid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paypartnergroupcode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    countrycode: jspb.Message.getFieldWithDefault(msg, 50, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.OTPTransRequestMessage}
 */
proto.Commondata.OTPTransRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.OTPTransRequestMessage;
  return proto.Commondata.OTPTransRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.OTPTransRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.OTPTransRequestMessage}
 */
proto.Commondata.OTPTransRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenoorbankormerchantaccountno(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaypartnerserviceid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaypartnergroupcode(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.OTPTransRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.OTPTransRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.OTPTransRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.OTPTransRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobilenoorbankormerchantaccountno();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaypartnerserviceid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaypartnergroupcode();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string mobileNoOrBankOrMerchantAccountNo = 1;
 * @return {string}
 */
proto.Commondata.OTPTransRequestMessage.prototype.getMobilenoorbankormerchantaccountno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.OTPTransRequestMessage} returns this
 */
proto.Commondata.OTPTransRequestMessage.prototype.setMobilenoorbankormerchantaccountno = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payPartnerServiceId = 2;
 * @return {string}
 */
proto.Commondata.OTPTransRequestMessage.prototype.getPaypartnerserviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.OTPTransRequestMessage} returns this
 */
proto.Commondata.OTPTransRequestMessage.prototype.setPaypartnerserviceid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 paypartnerGroupCode = 3;
 * @return {number}
 */
proto.Commondata.OTPTransRequestMessage.prototype.getPaypartnergroupcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.OTPTransRequestMessage} returns this
 */
proto.Commondata.OTPTransRequestMessage.prototype.setPaypartnergroupcode = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string countryCode = 50;
 * @return {string}
 */
proto.Commondata.OTPTransRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.OTPTransRequestMessage} returns this
 */
proto.Commondata.OTPTransRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Commondata.OTPTransRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.OTPTransRequestMessage} returns this
 */
proto.Commondata.OTPTransRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.CustomerPasswordResetInAppRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.CustomerPasswordResetInAppRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    passwordcurrent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    passwordnew: jspb.Message.getFieldWithDefault(msg, 2, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.CustomerPasswordResetInAppRequestMessage}
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.CustomerPasswordResetInAppRequestMessage;
  return proto.Commondata.CustomerPasswordResetInAppRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.CustomerPasswordResetInAppRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.CustomerPasswordResetInAppRequestMessage}
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPasswordcurrent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPasswordnew(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.CustomerPasswordResetInAppRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.CustomerPasswordResetInAppRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPasswordcurrent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPasswordnew();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string passwordCurrent = 1;
 * @return {string}
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.prototype.getPasswordcurrent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerPasswordResetInAppRequestMessage} returns this
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.prototype.setPasswordcurrent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string passwordNew = 2;
 * @return {string}
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.prototype.getPasswordnew = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerPasswordResetInAppRequestMessage} returns this
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.prototype.setPasswordnew = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string languageId = 3;
 * @return {string}
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerPasswordResetInAppRequestMessage} returns this
 */
proto.Commondata.CustomerPasswordResetInAppRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.DeleteAccountMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.DeleteAccountMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.DeleteAccountMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.DeleteAccountMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    source1orbeneficiary2: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountnumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.DeleteAccountMessage}
 */
proto.Commondata.DeleteAccountMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.DeleteAccountMessage;
  return proto.Commondata.DeleteAccountMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.DeleteAccountMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.DeleteAccountMessage}
 */
proto.Commondata.DeleteAccountMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSource1orbeneficiary2(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountnumber(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.DeleteAccountMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.DeleteAccountMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.DeleteAccountMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.DeleteAccountMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource1orbeneficiary2();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAccountnumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional int32 Source1OrBeneficiary2 = 1;
 * @return {number}
 */
proto.Commondata.DeleteAccountMessage.prototype.getSource1orbeneficiary2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.DeleteAccountMessage} returns this
 */
proto.Commondata.DeleteAccountMessage.prototype.setSource1orbeneficiary2 = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string AccountNumber = 2;
 * @return {string}
 */
proto.Commondata.DeleteAccountMessage.prototype.getAccountnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.DeleteAccountMessage} returns this
 */
proto.Commondata.DeleteAccountMessage.prototype.setAccountnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Commondata.DeleteAccountMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.DeleteAccountMessage} returns this
 */
proto.Commondata.DeleteAccountMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.ImageRepoCred.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.ImageRepoCred.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.ImageRepoCred} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.ImageRepoCred.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    apikey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    apisecret: jspb.Message.getFieldWithDefault(msg, 3, ""),
    publicidandfilename: jspb.Message.getFieldWithDefault(msg, 4, ""),
    filename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    uploadpreset: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.ImageRepoCred}
 */
proto.Commondata.ImageRepoCred.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.ImageRepoCred;
  return proto.Commondata.ImageRepoCred.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.ImageRepoCred} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.ImageRepoCred}
 */
proto.Commondata.ImageRepoCred.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApikey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApisecret(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicidandfilename(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUploadpreset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.ImageRepoCred.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.ImageRepoCred.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.ImageRepoCred} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.ImageRepoCred.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApiname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApikey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApisecret();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPublicidandfilename();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUploadpreset();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string apiName = 1;
 * @return {string}
 */
proto.Commondata.ImageRepoCred.prototype.getApiname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.ImageRepoCred} returns this
 */
proto.Commondata.ImageRepoCred.prototype.setApiname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string apiKey = 2;
 * @return {string}
 */
proto.Commondata.ImageRepoCred.prototype.getApikey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.ImageRepoCred} returns this
 */
proto.Commondata.ImageRepoCred.prototype.setApikey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string apiSecret = 3;
 * @return {string}
 */
proto.Commondata.ImageRepoCred.prototype.getApisecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.ImageRepoCred} returns this
 */
proto.Commondata.ImageRepoCred.prototype.setApisecret = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string publicIdAndFileName = 4;
 * @return {string}
 */
proto.Commondata.ImageRepoCred.prototype.getPublicidandfilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.ImageRepoCred} returns this
 */
proto.Commondata.ImageRepoCred.prototype.setPublicidandfilename = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string fileName = 5;
 * @return {string}
 */
proto.Commondata.ImageRepoCred.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.ImageRepoCred} returns this
 */
proto.Commondata.ImageRepoCred.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string uploadPreset = 6;
 * @return {string}
 */
proto.Commondata.ImageRepoCred.prototype.getUploadpreset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.ImageRepoCred} returns this
 */
proto.Commondata.ImageRepoCred.prototype.setUploadpreset = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.CustomerProfileInfoResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.CustomerProfileInfoResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CustomerProfileInfoResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messagesuccessfulorfailed: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mobilenumber: jspb.Message.getFieldWithDefault(msg, 5, ""),
    emailaddress: jspb.Message.getFieldWithDefault(msg, 6, ""),
    personalbusinessgroup: jspb.Message.getFieldWithDefault(msg, 7, ""),
    personalbusinessgroupvalue: jspb.Message.getFieldWithDefault(msg, 8, 0),
    firstname: jspb.Message.getFieldWithDefault(msg, 9, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 10, ""),
    businessname: jspb.Message.getFieldWithDefault(msg, 12, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 13, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 14, ""),
    operatingcountryyesno: jspb.Message.getFieldWithDefault(msg, 15, ""),
    customerprofilepicimageurl: jspb.Message.getFieldWithDefault(msg, 16, ""),
    loginerrorcode: jspb.Message.getFieldWithDefault(msg, 51, ""),
    kycdataenc: jspb.Message.getFieldWithDefault(msg, 52, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.CustomerProfileInfoResponseMessage;
  return proto.Commondata.CustomerProfileInfoResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.CustomerProfileInfoResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagesuccessfulorfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailaddress(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonalbusinessgroup(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersonalbusinessgroupvalue(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessname(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatingcountryyesno(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerprofilepicimageurl(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginerrorcode(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setKycdataenc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.CustomerProfileInfoResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.CustomerProfileInfoResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CustomerProfileInfoResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessagesuccessfulorfailed();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMobilenumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEmailaddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPersonalbusinessgroup();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPersonalbusinessgroupvalue();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBusinessname();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getOperatingcountryyesno();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCustomerprofilepicimageurl();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getLoginerrorcode();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getKycdataenc();
  if (f.length > 0) {
    writer.writeString(
      52,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string messageSuccessfulOrFailed = 2;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getMessagesuccessfulorfailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setMessagesuccessfulorfailed = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string customerId = 4;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string mobileNumber = 5;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getMobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setMobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string emailAddress = 6;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getEmailaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setEmailaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string personalBusinessGroup = 7;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getPersonalbusinessgroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setPersonalbusinessgroup = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 personalBusinessGroupValue = 8;
 * @return {number}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getPersonalbusinessgroupvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setPersonalbusinessgroupvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string firstName = 9;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string lastName = 10;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string businessName = 12;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getBusinessname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setBusinessname = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string countryCode = 13;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string languageId = 14;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string OperatingCountryYesNo = 15;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getOperatingcountryyesno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setOperatingcountryyesno = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string customerProfilePicImageUrl = 16;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getCustomerprofilepicimageurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setCustomerprofilepicimageurl = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string loginErrorCode = 51;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getLoginerrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setLoginerrorcode = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional string kycDataEnc = 52;
 * @return {string}
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.getKycdataenc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustomerProfileInfoResponseMessage} returns this
 */
proto.Commondata.CustomerProfileInfoResponseMessage.prototype.setKycdataenc = function(value) {
  return jspb.Message.setProto3StringField(this, 52, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.CustProfilePicInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.CustProfilePicInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.CustProfilePicInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CustProfilePicInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    profileimageinbase64: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.CustProfilePicInfo}
 */
proto.Commondata.CustProfilePicInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.CustProfilePicInfo;
  return proto.Commondata.CustProfilePicInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.CustProfilePicInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.CustProfilePicInfo}
 */
proto.Commondata.CustProfilePicInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfileimageinbase64(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.CustProfilePicInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.CustProfilePicInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.CustProfilePicInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.CustProfilePicInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfileimageinbase64();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string profileImageInBase64 = 1;
 * @return {string}
 */
proto.Commondata.CustProfilePicInfo.prototype.getProfileimageinbase64 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.CustProfilePicInfo} returns this
 */
proto.Commondata.CustProfilePicInfo.prototype.setProfileimageinbase64 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.TransLimitResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.TransLimitResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.TransLimitResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.TransLimitResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    currencyiso: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dailycrcashinlimitamountforbasic: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    dailycrcashinlimitamountforstandard: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    dailycrcashinlimitamountforenhanced: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    dailydrcashinlimitamountforbasic: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    dailydrcashinlimitamountforstandard: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    dailydrcashinlimitamountforenhanced: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.TransLimitResponseMessage}
 */
proto.Commondata.TransLimitResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.TransLimitResponseMessage;
  return proto.Commondata.TransLimitResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.TransLimitResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.TransLimitResponseMessage}
 */
proto.Commondata.TransLimitResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDailycrcashinlimitamountforbasic(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDailycrcashinlimitamountforstandard(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDailycrcashinlimitamountforenhanced(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDailydrcashinlimitamountforbasic(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDailydrcashinlimitamountforstandard(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDailydrcashinlimitamountforenhanced(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.TransLimitResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.TransLimitResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.TransLimitResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.TransLimitResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDailycrcashinlimitamountforbasic();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getDailycrcashinlimitamountforstandard();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getDailycrcashinlimitamountforenhanced();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getDailydrcashinlimitamountforbasic();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getDailydrcashinlimitamountforstandard();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getDailydrcashinlimitamountforenhanced();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.Commondata.TransLimitResponseMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.TransLimitResponseMessage} returns this
 */
proto.Commondata.TransLimitResponseMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string currencyIso = 2;
 * @return {string}
 */
proto.Commondata.TransLimitResponseMessage.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.TransLimitResponseMessage} returns this
 */
proto.Commondata.TransLimitResponseMessage.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double dailyCrCashInLimitAmountForBasic = 5;
 * @return {number}
 */
proto.Commondata.TransLimitResponseMessage.prototype.getDailycrcashinlimitamountforbasic = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.TransLimitResponseMessage} returns this
 */
proto.Commondata.TransLimitResponseMessage.prototype.setDailycrcashinlimitamountforbasic = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double dailyCrCashInLimitAmountForStandard = 6;
 * @return {number}
 */
proto.Commondata.TransLimitResponseMessage.prototype.getDailycrcashinlimitamountforstandard = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.TransLimitResponseMessage} returns this
 */
proto.Commondata.TransLimitResponseMessage.prototype.setDailycrcashinlimitamountforstandard = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double dailyCrCashInLimitAmountForEnhanced = 7;
 * @return {number}
 */
proto.Commondata.TransLimitResponseMessage.prototype.getDailycrcashinlimitamountforenhanced = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.TransLimitResponseMessage} returns this
 */
proto.Commondata.TransLimitResponseMessage.prototype.setDailycrcashinlimitamountforenhanced = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double dailyDrCashInLimitAmountForBasic = 8;
 * @return {number}
 */
proto.Commondata.TransLimitResponseMessage.prototype.getDailydrcashinlimitamountforbasic = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.TransLimitResponseMessage} returns this
 */
proto.Commondata.TransLimitResponseMessage.prototype.setDailydrcashinlimitamountforbasic = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double dailyDrCashInLimitAmountForStandard = 9;
 * @return {number}
 */
proto.Commondata.TransLimitResponseMessage.prototype.getDailydrcashinlimitamountforstandard = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.TransLimitResponseMessage} returns this
 */
proto.Commondata.TransLimitResponseMessage.prototype.setDailydrcashinlimitamountforstandard = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double dailyDrCashInLimitAmountForEnhanced = 10;
 * @return {number}
 */
proto.Commondata.TransLimitResponseMessage.prototype.getDailydrcashinlimitamountforenhanced = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.TransLimitResponseMessage} returns this
 */
proto.Commondata.TransLimitResponseMessage.prototype.setDailydrcashinlimitamountforenhanced = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Commondata.IdCardDataMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Commondata.IdCardDataMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Commondata.IdCardDataMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.IdCardDataMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    kyctypeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    kycverifystatus: jspb.Message.getFieldWithDefault(msg, 2, ""),
    kyctypename: jspb.Message.getFieldWithDefault(msg, 5, ""),
    idcardno: jspb.Message.getFieldWithDefault(msg, 6, ""),
    dateofbirth: jspb.Message.getFieldWithDefault(msg, 7, ""),
    idcardexpirydate: jspb.Message.getFieldWithDefault(msg, 8, ""),
    idcardtype: jspb.Message.getFieldWithDefault(msg, 9, ""),
    idremarksnote: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Commondata.IdCardDataMessage}
 */
proto.Commondata.IdCardDataMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Commondata.IdCardDataMessage;
  return proto.Commondata.IdCardDataMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Commondata.IdCardDataMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Commondata.IdCardDataMessage}
 */
proto.Commondata.IdCardDataMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKyctypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKycverifystatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setKyctypename(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdcardno(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateofbirth(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdcardexpirydate(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdcardtype(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdremarksnote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Commondata.IdCardDataMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Commondata.IdCardDataMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Commondata.IdCardDataMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Commondata.IdCardDataMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKyctypeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getKycverifystatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKyctypename();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIdcardno();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDateofbirth();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIdcardexpirydate();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIdcardtype();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIdremarksnote();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int32 KycTypeId = 1;
 * @return {number}
 */
proto.Commondata.IdCardDataMessage.prototype.getKyctypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Commondata.IdCardDataMessage} returns this
 */
proto.Commondata.IdCardDataMessage.prototype.setKyctypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string KycVerifyStatus = 2;
 * @return {string}
 */
proto.Commondata.IdCardDataMessage.prototype.getKycverifystatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.IdCardDataMessage} returns this
 */
proto.Commondata.IdCardDataMessage.prototype.setKycverifystatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string KycTypeName = 5;
 * @return {string}
 */
proto.Commondata.IdCardDataMessage.prototype.getKyctypename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.IdCardDataMessage} returns this
 */
proto.Commondata.IdCardDataMessage.prototype.setKyctypename = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string IDCardNo = 6;
 * @return {string}
 */
proto.Commondata.IdCardDataMessage.prototype.getIdcardno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.IdCardDataMessage} returns this
 */
proto.Commondata.IdCardDataMessage.prototype.setIdcardno = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string DateOfBirth = 7;
 * @return {string}
 */
proto.Commondata.IdCardDataMessage.prototype.getDateofbirth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.IdCardDataMessage} returns this
 */
proto.Commondata.IdCardDataMessage.prototype.setDateofbirth = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string iDCardExpiryDate = 8;
 * @return {string}
 */
proto.Commondata.IdCardDataMessage.prototype.getIdcardexpirydate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.IdCardDataMessage} returns this
 */
proto.Commondata.IdCardDataMessage.prototype.setIdcardexpirydate = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string iDCardType = 9;
 * @return {string}
 */
proto.Commondata.IdCardDataMessage.prototype.getIdcardtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.IdCardDataMessage} returns this
 */
proto.Commondata.IdCardDataMessage.prototype.setIdcardtype = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string iDRemarksNote = 10;
 * @return {string}
 */
proto.Commondata.IdCardDataMessage.prototype.getIdremarksnote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Commondata.IdCardDataMessage} returns this
 */
proto.Commondata.IdCardDataMessage.prototype.setIdremarksnote = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


goog.object.extend(exports, proto.Commondata);
